### YamlMime:ManagedReference
items:
- uid: Global.RefFloat
  commentId: T:Global.RefFloat
  id: RefFloat
  parent: Global
  children:
  - Global.RefFloat.#ctor(System.Single,System.Boolean,VarFloat)
  - Global.RefFloat.Value
  - Global.RefFloat.op_Implicit(RefFloat)~System.Single
  - Global.RefFloat.op_Implicit(System.Single)~RefFloat
  langs:
  - csharp
  - vb
  name: RefFloat
  nameWithType: RefFloat
  fullName: RefFloat
  type: Struct
  source:
    remote:
      path: Utility/Variables/RefFloat.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: RefFloat
    path: ../Utility/Variables/RefFloat.cs
    startLine: 4
  assemblies:
  - LobsterFramework
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct RefFloat
    content.vb: >-
      <Serializable>

      Public Structure RefFloat
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.RefFloat.#ctor(System.Single,System.Boolean,VarFloat)
  commentId: M:Global.RefFloat.#ctor(System.Single,System.Boolean,VarFloat)
  id: '#ctor(System.Single,System.Boolean,VarFloat)'
  parent: Global.RefFloat
  langs:
  - csharp
  - vb
  name: RefFloat(float, bool, VarFloat)
  nameWithType: RefFloat.RefFloat(float, bool, VarFloat)
  fullName: RefFloat.RefFloat(float, bool, VarFloat)
  type: Constructor
  source:
    remote:
      path: Utility/Variables/RefFloat.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: .ctor
    path: ../Utility/Variables/RefFloat.cs
    startLine: 11
  assemblies:
  - LobsterFramework
  namespace: Global
  syntax:
    content: public RefFloat(float value = 0, bool useSharedValue = false, VarFloat sharedValue = null)
    parameters:
    - id: value
      type: System.Single
    - id: useSharedValue
      type: System.Boolean
    - id: sharedValue
      type: Global.VarFloat
    content.vb: Public Sub New(value As Single = 0, useSharedValue As Boolean = False, sharedValue As VarFloat = Nothing)
  overload: Global.RefFloat.#ctor*
  nameWithType.vb: RefFloat.New(Single, Boolean, VarFloat)
  fullName.vb: RefFloat.New(Single, Boolean, VarFloat)
  name.vb: New(Single, Boolean, VarFloat)
- uid: Global.RefFloat.op_Implicit(System.Single)~RefFloat
  commentId: M:Global.RefFloat.op_Implicit(System.Single)~RefFloat
  id: op_Implicit(System.Single)~RefFloat
  parent: Global.RefFloat
  langs:
  - csharp
  - vb
  name: implicit operator RefFloat(float)
  nameWithType: RefFloat.implicit operator RefFloat(float)
  fullName: RefFloat.implicit operator RefFloat(float)
  type: Operator
  source:
    remote:
      path: Utility/Variables/RefFloat.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: op_Implicit
    path: ../Utility/Variables/RefFloat.cs
    startLine: 17
  assemblies:
  - LobsterFramework
  namespace: Global
  syntax:
    content: public static implicit operator RefFloat(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: Global.RefFloat
    content.vb: Public Shared Widening Operator CType(value As Single) As RefFloat
  overload: Global.RefFloat.op_Implicit*
  nameWithType.vb: RefFloat.CType(Single)
  fullName.vb: RefFloat.CType(Single)
  name.vb: CType(Single)
- uid: Global.RefFloat.op_Implicit(RefFloat)~System.Single
  commentId: M:Global.RefFloat.op_Implicit(RefFloat)~System.Single
  id: op_Implicit(RefFloat)~System.Single
  parent: Global.RefFloat
  langs:
  - csharp
  - vb
  name: implicit operator float(RefFloat)
  nameWithType: RefFloat.implicit operator float(RefFloat)
  fullName: RefFloat.implicit operator float(RefFloat)
  type: Operator
  source:
    remote:
      path: Utility/Variables/RefFloat.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: op_Implicit
    path: ../Utility/Variables/RefFloat.cs
    startLine: 22
  assemblies:
  - LobsterFramework
  namespace: Global
  syntax:
    content: public static implicit operator float(RefFloat value)
    parameters:
    - id: value
      type: Global.RefFloat
    return:
      type: System.Single
    content.vb: Public Shared Widening Operator CType(value As RefFloat) As Single
  overload: Global.RefFloat.op_Implicit*
  nameWithType.vb: RefFloat.CType(RefFloat)
  fullName.vb: RefFloat.CType(RefFloat)
  name.vb: CType(RefFloat)
- uid: Global.RefFloat.Value
  commentId: P:Global.RefFloat.Value
  id: Value
  parent: Global.RefFloat
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: RefFloat.Value
  fullName: RefFloat.Value
  type: Property
  source:
    remote:
      path: Utility/Variables/RefFloat.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Value
    path: ../Utility/Variables/RefFloat.cs
    startLine: 26
  assemblies:
  - LobsterFramework
  namespace: Global
  syntax:
    content: public float Value { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Value As Single
  overload: Global.RefFloat.Value*
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RefFloat.#ctor*
  commentId: Overload:Global.RefFloat.#ctor
  href: Global.RefFloat.html#RefFloat.#ctor(System.Single,System.Boolean,VarFloat)
  name: RefFloat
  nameWithType: RefFloat.RefFloat
  fullName: RefFloat.RefFloat
  nameWithType.vb: RefFloat.New
  fullName.vb: RefFloat.New
  name.vb: New
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.VarFloat
  commentId: T:Global.VarFloat
  href: VarFloat.html
  name: VarFloat
  nameWithType: VarFloat
  fullName: VarFloat
- uid: Global.RefFloat.op_Implicit*
  commentId: Overload:Global.RefFloat.op_Implicit
  name: implicit operator
  nameWithType: RefFloat.implicit operator
  fullName: RefFloat.implicit operator
  nameWithType.vb: RefFloat.CType
  fullName.vb: RefFloat.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: Global.RefFloat
  commentId: T:Global.RefFloat
  href: RefFloat.html
  name: RefFloat
  nameWithType: RefFloat
  fullName: RefFloat
- uid: Global.RefFloat.Value*
  commentId: Overload:Global.RefFloat.Value
  href: Global.RefFloat.html#RefFloat.Value
  name: Value
  nameWithType: RefFloat.Value
  fullName: RefFloat.Value
