### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.Ability
  commentId: T:LobsterFramework.AbilitySystem.Ability
  id: Ability
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.Ability.Action
  - LobsterFramework.AbilitySystem.Ability.Channel
  - LobsterFramework.AbilitySystem.Ability.Clear
  - LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  - LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  - LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  - LobsterFramework.AbilitySystem.Ability.Config
  - LobsterFramework.AbilitySystem.Ability.ConfigName
  - LobsterFramework.AbilitySystem.Ability.HasConfig(System.String)
  - LobsterFramework.AbilitySystem.Ability.Initialize
  - LobsterFramework.AbilitySystem.Ability.IsExecuting(System.String)
  - LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  - LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type,System.String)
  - LobsterFramework.AbilitySystem.Ability.JoinAsSecondary``1(System.String)
  - LobsterFramework.AbilitySystem.Ability.OnActionFinish
  - LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  - LobsterFramework.AbilitySystem.Ability.OnEnqueue
  - LobsterFramework.AbilitySystem.Ability.OnSignaled
  - LobsterFramework.AbilitySystem.Ability.OnSignaled(System.Boolean)
  - LobsterFramework.AbilitySystem.Ability.OnSignaled(System.Int32)
  - LobsterFramework.AbilitySystem.Ability.OnSignaled(System.String)
  - LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  - LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.Object)
  - LobsterFramework.AbilitySystem.Ability.Running
  - LobsterFramework.AbilitySystem.Ability.Runtime
  - LobsterFramework.AbilitySystem.Ability.Signal(System.String)
  - LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.Boolean)
  - LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.Int32)
  - LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.String)
  - LobsterFramework.AbilitySystem.Ability.Signal(System.String,UnityEngine.AnimationEvent)
  - LobsterFramework.AbilitySystem.Ability.Signal(System.String,UnityEngine.Object)
  - LobsterFramework.AbilitySystem.Ability.StartAnimation(System.String,UnityEngine.AnimationClip,System.Single)
  - LobsterFramework.AbilitySystem.Ability.SuspendAll
  - LobsterFramework.AbilitySystem.Ability.SuspendInstance(System.String)
  - LobsterFramework.AbilitySystem.Ability.abilityManager
  - LobsterFramework.AbilitySystem.Ability.abilityPriority
  langs:
  - csharp
  - vb
  name: Ability
  nameWithType: Ability
  fullName: LobsterFramework.AbilitySystem.Ability
  type: Class
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Ability
    path: ../AbilitySystem/Ability.cs
    startLine: 16
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Abilities defines the kind of actions the parent object can make. <br />

    Each subclass of Ability defines its own AbilityConfig and can be runned on multiple instances of its AbilityConfigs.
  example: []
  syntax:
    content: 'public abstract class Ability : ScriptableObject'
    content.vb: Public MustInherit Class Ability Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  derivedClasses:
  - LobsterFramework.AbilitySystem.AbilityCoroutine
  - LobsterFramework.AbilitySystem.OffhandAbility
  - LobsterFramework.AbilitySystem.WeaponArt
  inheritedMembers:
  - UnityEngine.ScriptableObject.SetDirty
  - UnityEngine.ScriptableObject.CreateInstance(System.String)
  - UnityEngine.ScriptableObject.CreateInstance(System.Type)
  - UnityEngine.ScriptableObject.CreateInstance``1
  - UnityEngine.Object.GetInstanceID
  - UnityEngine.Object.GetHashCode
  - UnityEngine.Object.Equals(System.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Instantiate``1({T})
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  - UnityEngine.Object.Destroy(UnityEngine.Object)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  - UnityEngine.Object.FindObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object)
  - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  - UnityEngine.Object.FindObjectsOfType``1
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectOfType``1
  - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType``1
  - UnityEngine.Object.FindAnyObjectByType``1
  - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type)
  - UnityEngine.Object.FindFirstObjectByType(System.Type)
  - UnityEngine.Object.FindAnyObjectByType(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.ToString
  - UnityEngine.Object.name
  - UnityEngine.Object.hideFlags
- uid: LobsterFramework.AbilitySystem.Ability.abilityManager
  commentId: F:LobsterFramework.AbilitySystem.Ability.abilityManager
  id: abilityManager
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: abilityManager
  nameWithType: Ability.abilityManager
  fullName: LobsterFramework.AbilitySystem.Ability.abilityManager
  type: Field
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: abilityManager
    path: ../AbilitySystem/Ability.cs
    startLine: 18
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected AbilityManager abilityManager
    return:
      type: LobsterFramework.AbilitySystem.AbilityManager
    content.vb: Protected abilityManager As AbilityManager
- uid: LobsterFramework.AbilitySystem.Ability.abilityPriority
  commentId: F:LobsterFramework.AbilitySystem.Ability.abilityPriority
  id: abilityPriority
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: abilityPriority
  nameWithType: Ability.abilityPriority
  fullName: LobsterFramework.AbilitySystem.Ability.abilityPriority
  type: Field
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: abilityPriority
    path: ../AbilitySystem/Ability.cs
    startLine: 19
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public RefAbilityPriority abilityPriority
    return:
      type: Global.RefAbilityPriority
    content.vb: Public abilityPriority As RefAbilityPriority
- uid: LobsterFramework.AbilitySystem.Ability.ConfigName
  commentId: P:LobsterFramework.AbilitySystem.Ability.ConfigName
  id: ConfigName
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: ConfigName
  nameWithType: Ability.ConfigName
  fullName: LobsterFramework.AbilitySystem.Ability.ConfigName
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: ConfigName
    path: ../AbilitySystem/Ability.cs
    startLine: 27
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected string ConfigName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property ConfigName As String
  overload: LobsterFramework.AbilitySystem.Ability.ConfigName*
- uid: LobsterFramework.AbilitySystem.Ability.Config
  commentId: P:LobsterFramework.AbilitySystem.Ability.Config
  id: Config
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Ability.Config
  fullName: LobsterFramework.AbilitySystem.Ability.Config
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Config
    path: ../AbilitySystem/Ability.cs
    startLine: 28
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected AbilityConfig Config { get; }
    parameters: []
    return:
      type: LobsterFramework.AbilitySystem.AbilityConfig
    content.vb: Protected Property Config As AbilityConfig
  overload: LobsterFramework.AbilitySystem.Ability.Config*
- uid: LobsterFramework.AbilitySystem.Ability.Channel
  commentId: P:LobsterFramework.AbilitySystem.Ability.Channel
  id: Channel
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: Ability.Channel
  fullName: LobsterFramework.AbilitySystem.Ability.Channel
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Channel
    path: ../AbilitySystem/Ability.cs
    startLine: 29
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected AbilityChannel Channel { get; }
    parameters: []
    return:
      type: LobsterFramework.AbilitySystem.AbilityChannel
    content.vb: Protected Property Channel As AbilityChannel
  overload: LobsterFramework.AbilitySystem.Ability.Channel*
- uid: LobsterFramework.AbilitySystem.Ability.Runtime
  commentId: P:LobsterFramework.AbilitySystem.Ability.Runtime
  id: Runtime
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Runtime
  nameWithType: Ability.Runtime
  fullName: LobsterFramework.AbilitySystem.Ability.Runtime
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Runtime
    path: ../AbilitySystem/Ability.cs
    startLine: 30
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected AbilityRuntime Runtime { get; }
    parameters: []
    return:
      type: LobsterFramework.AbilitySystem.AbilityRuntime
    content.vb: Protected Property Runtime As AbilityRuntime
  overload: LobsterFramework.AbilitySystem.Ability.Runtime*
- uid: LobsterFramework.AbilitySystem.Ability.Clear
  commentId: M:LobsterFramework.AbilitySystem.Ability.Clear
  id: Clear
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Ability.Clear()
  fullName: LobsterFramework.AbilitySystem.Ability.Clear()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Clear
    path: ../AbilitySystem/Ability.cs
    startLine: 108
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback when the gameobject is about to be disabled or destroyed
  example: []
  syntax:
    content: protected virtual void Clear()
    content.vb: Protected Overridable Sub Clear()
  overload: LobsterFramework.AbilitySystem.Ability.Clear*
- uid: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  commentId: M:LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  id: CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: CompareByExecutionPriority(Ability)
  nameWithType: Ability.CompareByExecutionPriority(Ability)
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: CompareByExecutionPriority
    path: ../AbilitySystem/Ability.cs
    startLine: 111
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public int CompareByExecutionPriority(Ability other)
    parameters:
    - id: other
      type: LobsterFramework.AbilitySystem.Ability
    return:
      type: System.Int32
    content.vb: Public Function CompareByExecutionPriority(other As Ability) As Integer
  overload: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority*
- uid: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  commentId: M:LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  id: CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: CompareByEnqueuePriority(Ability)
  nameWithType: Ability.CompareByEnqueuePriority(Ability)
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: CompareByEnqueuePriority
    path: ../AbilitySystem/Ability.cs
    startLine: 116
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public int CompareByEnqueuePriority(Ability other)
    parameters:
    - id: other
      type: LobsterFramework.AbilitySystem.Ability
    return:
      type: System.Int32
    content.vb: Public Function CompareByEnqueuePriority(other As Ability) As Integer
  overload: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority*
- uid: LobsterFramework.AbilitySystem.Ability.StartAnimation(System.String,UnityEngine.AnimationClip,System.Single)
  commentId: M:LobsterFramework.AbilitySystem.Ability.StartAnimation(System.String,UnityEngine.AnimationClip,System.Single)
  id: StartAnimation(System.String,UnityEngine.AnimationClip,System.Single)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: StartAnimation(string, AnimationClip, float)
  nameWithType: Ability.StartAnimation(string, AnimationClip, float)
  fullName: LobsterFramework.AbilitySystem.Ability.StartAnimation(string, UnityEngine.AnimationClip, float)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: StartAnimation
    path: ../AbilitySystem/Ability.cs
    startLine: 121
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected void StartAnimation(string configName, AnimationClip animation, float speed = 1)
    parameters:
    - id: configName
      type: System.String
    - id: animation
      type: UnityEngine.AnimationClip
    - id: speed
      type: System.Single
    content.vb: Protected Sub StartAnimation(configName As String, animation As AnimationClip, speed As Single = 1)
  overload: LobsterFramework.AbilitySystem.Ability.StartAnimation*
  nameWithType.vb: Ability.StartAnimation(String, AnimationClip, Single)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.StartAnimation(String, UnityEngine.AnimationClip, Single)
  name.vb: StartAnimation(String, AnimationClip, Single)
- uid: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  commentId: M:LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  id: ConditionSatisfied
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: ConditionSatisfied()
  nameWithType: Ability.ConditionSatisfied()
  fullName: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: ConditionSatisfied
    path: ../AbilitySystem/Ability.cs
    startLine: 130
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Additionaly utility method for skill check that can be imeplemented if the ability have additional requirements, this may varies beween different configs
  example: []
  syntax:
    content: protected virtual bool ConditionSatisfied()
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Overridable Function ConditionSatisfied() As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied*
- uid: LobsterFramework.AbilitySystem.Ability.Running
  commentId: P:LobsterFramework.AbilitySystem.Ability.Running
  id: Running
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Running
  nameWithType: Ability.Running
  fullName: LobsterFramework.AbilitySystem.Ability.Running
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Running
    path: ../AbilitySystem/Ability.cs
    startLine: 203
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public int Running { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Running As Integer
  overload: LobsterFramework.AbilitySystem.Ability.Running*
- uid: LobsterFramework.AbilitySystem.Ability.SuspendInstance(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.SuspendInstance(System.String)
  id: SuspendInstance(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: SuspendInstance(string)
  nameWithType: Ability.SuspendInstance(string)
  fullName: LobsterFramework.AbilitySystem.Ability.SuspendInstance(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: SuspendInstance
    path: ../AbilitySystem/Ability.cs
    startLine: 210
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Suspend the execution of the specified configuration and casuing it to finish at the current frame
  example: []
  syntax:
    content: public bool SuspendInstance(string configName)
    parameters:
    - id: configName
      type: System.String
      description: Name of the configuration to terminate
    return:
      type: System.Boolean
      description: true if the config exists and is suspended, otherwise false
    content.vb: Public Function SuspendInstance(configName As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.SuspendInstance*
  nameWithType.vb: Ability.SuspendInstance(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.SuspendInstance(String)
  name.vb: SuspendInstance(String)
- uid: LobsterFramework.AbilitySystem.Ability.SuspendAll
  commentId: M:LobsterFramework.AbilitySystem.Ability.SuspendAll
  id: SuspendAll
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: SuspendAll()
  nameWithType: Ability.SuspendAll()
  fullName: LobsterFramework.AbilitySystem.Ability.SuspendAll()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: SuspendAll
    path: ../AbilitySystem/Ability.cs
    startLine: 237
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Suspend the execution of all configs
  example: []
  syntax:
    content: public void SuspendAll()
    content.vb: Public Sub SuspendAll()
  overload: LobsterFramework.AbilitySystem.Ability.SuspendAll*
- uid: LobsterFramework.AbilitySystem.Ability.Initialize
  commentId: M:LobsterFramework.AbilitySystem.Ability.Initialize
  id: Initialize
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: Ability.Initialize()
  fullName: LobsterFramework.AbilitySystem.Ability.Initialize()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Initialize
    path: ../AbilitySystem/Ability.cs
    startLine: 248
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback to initialize the ability runtime environment
  example: []
  syntax:
    content: protected virtual void Initialize()
    content.vb: Protected Overridable Sub Initialize()
  overload: LobsterFramework.AbilitySystem.Ability.Initialize*
- uid: LobsterFramework.AbilitySystem.Ability.IsExecuting(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.IsExecuting(System.String)
  id: IsExecuting(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: IsExecuting(string)
  nameWithType: Ability.IsExecuting(string)
  fullName: LobsterFramework.AbilitySystem.Ability.IsExecuting(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: IsExecuting
    path: ../AbilitySystem/Ability.cs
    startLine: 255
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Check if the provided config is executing, this method will return false if the config is not present
  example: []
  syntax:
    content: public bool IsExecuting(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the config to be examined
    return:
      type: System.Boolean
      description: true if the specified config is executing, otherwise false
    content.vb: Public Function IsExecuting(name As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.IsExecuting*
  nameWithType.vb: Ability.IsExecuting(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.IsExecuting(String)
  name.vb: IsExecuting(String)
- uid: LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  id: IsReady(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: IsReady(string)
  nameWithType: Ability.IsReady(string)
  fullName: LobsterFramework.AbilitySystem.Ability.IsReady(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: IsReady
    path: ../AbilitySystem/Ability.cs
    startLine: 265
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Check if the ability with specified config name is ready
  example: []
  syntax:
    content: public bool IsReady(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the ability config
    return:
      type: System.Boolean
      description: true if config with specified name exists and is ready, false otherwise
    content.vb: Public Function IsReady(name As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.IsReady*
  nameWithType.vb: Ability.IsReady(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.IsReady(String)
  name.vb: IsReady(String)
- uid: LobsterFramework.AbilitySystem.Ability.Action
  commentId: M:LobsterFramework.AbilitySystem.Ability.Action
  id: Action
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Action()
  nameWithType: Ability.Action()
  fullName: LobsterFramework.AbilitySystem.Ability.Action()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Action
    path: ../AbilitySystem/Ability.cs
    startLine: 339
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Main body of the ability execution, implement this to create different abilities!
  example: []
  syntax:
    content: protected abstract bool Action()
    return:
      type: System.Boolean
      description: False if the ability has finished, otherwise true
    content.vb: Protected MustOverride Function Action() As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.Action*
- uid: LobsterFramework.AbilitySystem.Ability.OnActionFinish
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnActionFinish
  id: OnActionFinish
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnActionFinish()
  nameWithType: Ability.OnActionFinish()
  fullName: LobsterFramework.AbilitySystem.Ability.OnActionFinish()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnActionFinish
    path: ../AbilitySystem/Ability.cs
    startLine: 345
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback when the action is finished or halted, override this to clean up temporary data generated during the action.
  example: []
  syntax:
    content: protected virtual void OnActionFinish()
    content.vb: Protected Overridable Sub OnActionFinish()
  overload: LobsterFramework.AbilitySystem.Ability.OnActionFinish*
- uid: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  id: OnAnimationInterrupt(Animancer.AnimancerState)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnAnimationInterrupt(AnimancerState)
  nameWithType: Ability.OnAnimationInterrupt(AnimancerState)
  fullName: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnAnimationInterrupt
    path: ../AbilitySystem/Ability.cs
    startLine: 351
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Callback when the animation of the ability is interrupted by other abilities. Useful when abilities relies on animation events.

    Default implementation suspends the ability.
  example: []
  syntax:
    content: protected virtual void OnAnimationInterrupt(AnimancerState state)
    parameters:
    - id: state
      type: Animancer.AnimancerState
    content.vb: Protected Overridable Sub OnAnimationInterrupt(state As AnimancerState)
  overload: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt*
- uid: LobsterFramework.AbilitySystem.Ability.OnEnqueue
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnEnqueue
  id: OnEnqueue
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnEnqueue()
  nameWithType: Ability.OnEnqueue()
  fullName: LobsterFramework.AbilitySystem.Ability.OnEnqueue()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnEnqueue
    path: ../AbilitySystem/Ability.cs
    startLine: 369
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Callback when the ability is added to the action executing queue
  example: []
  syntax:
    content: protected virtual void OnEnqueue()
    content.vb: Protected Overridable Sub OnEnqueue()
  overload: LobsterFramework.AbilitySystem.Ability.OnEnqueue*
- uid: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary``1(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.JoinAsSecondary``1(System.String)
  id: JoinAsSecondary``1(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: JoinAsSecondary<T>(string)
  nameWithType: Ability.JoinAsSecondary<T>(string)
  fullName: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary<T>(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: JoinAsSecondary
    path: ../AbilitySystem/Ability.cs
    startLine: 379
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Attempt to join the current running ability with another ability that is running. 

    On success, the current running ability will terminate no later than the joined ability.
  example: []
  syntax:
    content: 'protected bool JoinAsSecondary<T>(string configName) where T : Ability'
    parameters:
    - id: configName
      type: System.String
      description: The name of the configuration of the running ability to be joined
    typeParameters:
    - id: T
      description: The type of the ability to be joined with
    return:
      type: System.Boolean
      description: Return true on success, otherwise false
    content.vb: Protected Function JoinAsSecondary(Of T As Ability)(configName As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary*
  nameWithType.vb: Ability.JoinAsSecondary(Of T)(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(Of T)(String)
  name.vb: JoinAsSecondary(Of T)(String)
- uid: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type,System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type,System.String)
  id: JoinAsSecondary(System.Type,System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: JoinAsSecondary(Type, string)
  nameWithType: Ability.JoinAsSecondary(Type, string)
  fullName: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type, string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: JoinAsSecondary
    path: ../AbilitySystem/Ability.cs
    startLine: 391
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Attempt to join the current running ability with another ability that is running. 

    On success, the current running ability will terminate no later than the joined ability.
  example: []
  syntax:
    content: protected bool JoinAsSecondary(Type abilityType, string configName)
    parameters:
    - id: abilityType
      type: System.Type
      description: The type of the ability to be joined with
    - id: configName
      type: System.String
      description: The name of the configuration of the ability to be joined
    return:
      type: System.Boolean
      description: Return true on success, otherwise false
    content.vb: Protected Function JoinAsSecondary(abilityType As Type, configName As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary*
  nameWithType.vb: Ability.JoinAsSecondary(Type, String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type, String)
  name.vb: JoinAsSecondary(Type, String)
- uid: LobsterFramework.AbilitySystem.Ability.HasConfig(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.HasConfig(System.String)
  id: HasConfig(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: HasConfig(string)
  nameWithType: Ability.HasConfig(string)
  fullName: LobsterFramework.AbilitySystem.Ability.HasConfig(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: HasConfig
    path: ../AbilitySystem/Ability.cs
    startLine: 481
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool HasConfig(string configName)
    parameters:
    - id: configName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function HasConfig(configName As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.HasConfig*
  nameWithType.vb: Ability.HasConfig(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.HasConfig(String)
  name.vb: HasConfig(String)
- uid: LobsterFramework.AbilitySystem.Ability.Signal(System.String,UnityEngine.AnimationEvent)
  commentId: M:LobsterFramework.AbilitySystem.Ability.Signal(System.String,UnityEngine.AnimationEvent)
  id: Signal(System.String,UnityEngine.AnimationEvent)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Signal(string, AnimationEvent)
  nameWithType: Ability.Signal(string, AnimationEvent)
  fullName: LobsterFramework.AbilitySystem.Ability.Signal(string, UnityEngine.AnimationEvent)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Signal
    path: ../AbilitySystem/Ability.cs
    startLine: 493
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Signal this ability.
  example: []
  syntax:
    content: public void Signal(string configName, AnimationEvent animationEvent)
    parameters:
    - id: configName
      type: System.String
      description: ''
    - id: animationEvent
      type: UnityEngine.AnimationEvent
      description: ''
    content.vb: Public Sub Signal(configName As String, animationEvent As AnimationEvent)
  overload: LobsterFramework.AbilitySystem.Ability.Signal*
  nameWithType.vb: Ability.Signal(String, AnimationEvent)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.Signal(String, UnityEngine.AnimationEvent)
  name.vb: Signal(String, AnimationEvent)
- uid: LobsterFramework.AbilitySystem.Ability.Signal(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.Signal(System.String)
  id: Signal(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Signal(string)
  nameWithType: Ability.Signal(string)
  fullName: LobsterFramework.AbilitySystem.Ability.Signal(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Signal
    path: ../AbilitySystem/Ability.cs
    startLine: 504
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void Signal(string configName)
    parameters:
    - id: configName
      type: System.String
    content.vb: Public Sub Signal(configName As String)
  overload: LobsterFramework.AbilitySystem.Ability.Signal*
  nameWithType.vb: Ability.Signal(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.Signal(String)
  name.vb: Signal(String)
- uid: LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.Int32)
  commentId: M:LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.Int32)
  id: Signal(System.String,System.Int32)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Signal(string, int)
  nameWithType: Ability.Signal(string, int)
  fullName: LobsterFramework.AbilitySystem.Ability.Signal(string, int)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Signal
    path: ../AbilitySystem/Ability.cs
    startLine: 515
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void Signal(string configName, int num)
    parameters:
    - id: configName
      type: System.String
    - id: num
      type: System.Int32
    content.vb: Public Sub Signal(configName As String, num As Integer)
  overload: LobsterFramework.AbilitySystem.Ability.Signal*
  nameWithType.vb: Ability.Signal(String, Integer)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.Signal(String, Integer)
  name.vb: Signal(String, Integer)
- uid: LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.Boolean)
  commentId: M:LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.Boolean)
  id: Signal(System.String,System.Boolean)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Signal(string, bool)
  nameWithType: Ability.Signal(string, bool)
  fullName: LobsterFramework.AbilitySystem.Ability.Signal(string, bool)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Signal
    path: ../AbilitySystem/Ability.cs
    startLine: 526
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void Signal(string configName, bool flag)
    parameters:
    - id: configName
      type: System.String
    - id: flag
      type: System.Boolean
    content.vb: Public Sub Signal(configName As String, flag As Boolean)
  overload: LobsterFramework.AbilitySystem.Ability.Signal*
  nameWithType.vb: Ability.Signal(String, Boolean)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.Signal(String, Boolean)
  name.vb: Signal(String, Boolean)
- uid: LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.Signal(System.String,System.String)
  id: Signal(System.String,System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Signal(string, string)
  nameWithType: Ability.Signal(string, string)
  fullName: LobsterFramework.AbilitySystem.Ability.Signal(string, string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Signal
    path: ../AbilitySystem/Ability.cs
    startLine: 537
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void Signal(string configName, string text)
    parameters:
    - id: configName
      type: System.String
    - id: text
      type: System.String
    content.vb: Public Sub Signal(configName As String, text As String)
  overload: LobsterFramework.AbilitySystem.Ability.Signal*
  nameWithType.vb: Ability.Signal(String, String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.Signal(String, String)
  name.vb: Signal(String, String)
- uid: LobsterFramework.AbilitySystem.Ability.Signal(System.String,UnityEngine.Object)
  commentId: M:LobsterFramework.AbilitySystem.Ability.Signal(System.String,UnityEngine.Object)
  id: Signal(System.String,UnityEngine.Object)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Signal(string, Object)
  nameWithType: Ability.Signal(string, Object)
  fullName: LobsterFramework.AbilitySystem.Ability.Signal(string, UnityEngine.Object)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Signal
    path: ../AbilitySystem/Ability.cs
    startLine: 548
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public void Signal(string configName, Object obj)
    parameters:
    - id: configName
      type: System.String
    - id: obj
      type: UnityEngine.Object
    content.vb: Public Sub Signal(configName As String, obj As [Object])
  overload: LobsterFramework.AbilitySystem.Ability.Signal*
  nameWithType.vb: Ability.Signal(String, Object)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.Signal(String, UnityEngine.Object)
  name.vb: Signal(String, Object)
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  id: OnSignaled(UnityEngine.AnimationEvent)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnSignaled(AnimationEvent)
  nameWithType: Ability.OnSignaled(AnimationEvent)
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnSignaled
    path: ../AbilitySystem/Ability.cs
    startLine: 563
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Override this to implement signal event handler
  example: []
  syntax:
    content: protected virtual void OnSignaled(AnimationEvent animationEvent)
    parameters:
    - id: animationEvent
      type: UnityEngine.AnimationEvent
    content.vb: Protected Overridable Sub OnSignaled(animationEvent As AnimationEvent)
  overload: LobsterFramework.AbilitySystem.Ability.OnSignaled*
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnSignaled
  id: OnSignaled
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnSignaled()
  nameWithType: Ability.OnSignaled()
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnSignaled
    path: ../AbilitySystem/Ability.cs
    startLine: 568
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Override this to implement signal event handler
  example: []
  syntax:
    content: protected virtual void OnSignaled()
    content.vb: Protected Overridable Sub OnSignaled()
  overload: LobsterFramework.AbilitySystem.Ability.OnSignaled*
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled(System.Int32)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnSignaled(System.Int32)
  id: OnSignaled(System.Int32)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnSignaled(int)
  nameWithType: Ability.OnSignaled(int)
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled(int)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnSignaled
    path: ../AbilitySystem/Ability.cs
    startLine: 573
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Override this to implement signal event handler
  example: []
  syntax:
    content: protected virtual void OnSignaled(int num)
    parameters:
    - id: num
      type: System.Int32
    content.vb: Protected Overridable Sub OnSignaled(num As Integer)
  overload: LobsterFramework.AbilitySystem.Ability.OnSignaled*
  nameWithType.vb: Ability.OnSignaled(Integer)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.OnSignaled(Integer)
  name.vb: OnSignaled(Integer)
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled(System.Boolean)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnSignaled(System.Boolean)
  id: OnSignaled(System.Boolean)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnSignaled(bool)
  nameWithType: Ability.OnSignaled(bool)
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled(bool)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnSignaled
    path: ../AbilitySystem/Ability.cs
    startLine: 578
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Override this to implement signal event handler
  example: []
  syntax:
    content: protected virtual void OnSignaled(bool flag)
    parameters:
    - id: flag
      type: System.Boolean
    content.vb: Protected Overridable Sub OnSignaled(flag As Boolean)
  overload: LobsterFramework.AbilitySystem.Ability.OnSignaled*
  nameWithType.vb: Ability.OnSignaled(Boolean)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.OnSignaled(Boolean)
  name.vb: OnSignaled(Boolean)
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnSignaled(System.String)
  id: OnSignaled(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnSignaled(string)
  nameWithType: Ability.OnSignaled(string)
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnSignaled
    path: ../AbilitySystem/Ability.cs
    startLine: 583
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Override this to implement signal event handler
  example: []
  syntax:
    content: protected virtual void OnSignaled(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Protected Overridable Sub OnSignaled(text As String)
  overload: LobsterFramework.AbilitySystem.Ability.OnSignaled*
  nameWithType.vb: Ability.OnSignaled(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.OnSignaled(String)
  name.vb: OnSignaled(String)
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.Object)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.Object)
  id: OnSignaled(UnityEngine.Object)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnSignaled(Object)
  nameWithType: Ability.OnSignaled(Object)
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.Object)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnSignaled
    path: ../AbilitySystem/Ability.cs
    startLine: 588
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Override this to implement signal event handler
  example: []
  syntax:
    content: protected virtual void OnSignaled(Object obj)
    parameters:
    - id: obj
      type: UnityEngine.Object
    content.vb: Protected Overridable Sub OnSignaled(obj As [Object])
  overload: LobsterFramework.AbilitySystem.Ability.OnSignaled*
references:
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  href: LobsterFramework.html
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEngine.ScriptableObject.SetDirty
  commentId: M:UnityEngine.ScriptableObject.SetDirty
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: SetDirty()
  nameWithType: ScriptableObject.SetDirty()
  fullName: UnityEngine.ScriptableObject.SetDirty()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.String)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CreateInstance(string)
  nameWithType: ScriptableObject.CreateInstance(string)
  fullName: UnityEngine.ScriptableObject.CreateInstance(string)
  nameWithType.vb: ScriptableObject.CreateInstance(String)
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(String)
  name.vb: CreateInstance(String)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.Type)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CreateInstance(Type)
  nameWithType: ScriptableObject.CreateInstance(Type)
  fullName: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance``1
  commentId: M:UnityEngine.ScriptableObject.CreateInstance``1
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: CreateInstance<T>()
  nameWithType: ScriptableObject.CreateInstance<T>()
  fullName: UnityEngine.ScriptableObject.CreateInstance<T>()
  nameWithType.vb: ScriptableObject.CreateInstance(Of T)()
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(Of T)()
  name.vb: CreateInstance(Of T)()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.GetInstanceID
  commentId: M:UnityEngine.Object.GetInstanceID
  parent: UnityEngine.Object
  isExternal: true
  name: GetInstanceID()
  nameWithType: Object.GetInstanceID()
  fullName: UnityEngine.Object.GetInstanceID()
  spec.csharp:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Equals(object)
  nameWithType: Object.Equals(object)
  fullName: UnityEngine.Object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: UnityEngine.Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object)
  nameWithType: Object.Instantiate(Object)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform)
  nameWithType: Object.Instantiate(Object, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate(Object, Transform, bool)
  nameWithType: Object.Instantiate(Object, Transform, bool)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Object, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Object, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T})
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0)
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Destroy(Object, float)
  nameWithType: Object.Destroy(Object, float)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object, float)
  nameWithType.vb: Object.Destroy(Object, Single)
  fullName.vb: UnityEngine.Object.Destroy(UnityEngine.Object, Single)
  name.vb: Destroy(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object)
  nameWithType: Object.Destroy(Object)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DestroyImmediate(Object, bool)
  nameWithType: Object.DestroyImmediate(Object, bool)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, bool)
  nameWithType.vb: Object.DestroyImmediate(Object, Boolean)
  fullName.vb: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, Boolean)
  name.vb: DestroyImmediate(Object, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object)
  nameWithType: Object.DestroyImmediate(Object)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type)
  nameWithType: Object.FindObjectsOfType(Type)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type, bool)
  nameWithType: Object.FindObjectsOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectsOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(System.Type, Boolean)
  name.vb: FindObjectsOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DontDestroyOnLoad(Object)
  nameWithType: Object.DontDestroyOnLoad(Object)
  fullName: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DestroyObject(Object, float)
  nameWithType: Object.DestroyObject(Object, float)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object, float)
  nameWithType.vb: Object.DestroyObject(Object, Single)
  fullName.vb: UnityEngine.Object.DestroyObject(UnityEngine.Object, Single)
  name.vb: DestroyObject(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object)
  nameWithType: Object.DestroyObject(Object)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindSceneObjectsOfType(Type)
  nameWithType: Object.FindSceneObjectsOfType(Type)
  fullName: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeIncludingAssets(Type)
  nameWithType: Object.FindObjectsOfTypeIncludingAssets(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1
  commentId: M:UnityEngine.Object.FindObjectsOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>()
  nameWithType: Object.FindObjectsOfType<T>()
  fullName: UnityEngine.Object.FindObjectsOfType<T>()
  nameWithType.vb: Object.FindObjectsOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)()
  name.vb: FindObjectsOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectsOfType<T>(bool)
  nameWithType: Object.FindObjectsOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectsOfType<T>(bool)
  nameWithType.vb: Object.FindObjectsOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)(Boolean)
  name.vb: FindObjectsOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1
  commentId: M:UnityEngine.Object.FindObjectOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>()
  nameWithType: Object.FindObjectOfType<T>()
  fullName: UnityEngine.Object.FindObjectOfType<T>()
  nameWithType.vb: Object.FindObjectOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)()
  name.vb: FindObjectOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectOfType<T>(bool)
  nameWithType: Object.FindObjectOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectOfType<T>(bool)
  nameWithType.vb: Object.FindObjectOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)(Boolean)
  name.vb: FindObjectOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>()
  nameWithType: Object.FindFirstObjectByType<T>()
  fullName: UnityEngine.Object.FindFirstObjectByType<T>()
  nameWithType.vb: Object.FindFirstObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)()
  name.vb: FindFirstObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>()
  nameWithType: Object.FindAnyObjectByType<T>()
  fullName: UnityEngine.Object.FindAnyObjectByType<T>()
  nameWithType.vb: Object.FindAnyObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)()
  name.vb: FindAnyObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindFirstObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindFirstObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindAnyObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindAnyObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeAll(Type)
  nameWithType: Object.FindObjectsOfTypeAll(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type)
  nameWithType: Object.FindObjectOfType(Type)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type)
  nameWithType: Object.FindFirstObjectByType(Type)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type)
  nameWithType: Object.FindAnyObjectByType(Type)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type, bool)
  nameWithType: Object.FindObjectOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(System.Type, Boolean)
  name.vb: FindObjectOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.ToString
  commentId: M:UnityEngine.Object.ToString
  parent: UnityEngine.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: UnityEngine.Object.ToString()
  spec.csharp:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  parent: UnityEngine.Object
  isExternal: true
  name: name
  nameWithType: Object.name
  fullName: UnityEngine.Object.name
- uid: UnityEngine.Object.hideFlags
  commentId: P:UnityEngine.Object.hideFlags
  parent: UnityEngine.Object
  isExternal: true
  name: hideFlags
  nameWithType: Object.hideFlags
  fullName: UnityEngine.Object.hideFlags
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Object.Instantiate``1(``0)
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  isExternal: true
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: LobsterFramework.AbilitySystem.AbilityManager
  commentId: T:LobsterFramework.AbilitySystem.AbilityManager
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityManager.html
  name: AbilityManager
  nameWithType: AbilityManager
  fullName: LobsterFramework.AbilitySystem.AbilityManager
- uid: Global.RefAbilityPriority
  commentId: T:Global.RefAbilityPriority
  href: RefAbilityPriority.html
  name: RefAbilityPriority
  nameWithType: RefAbilityPriority
  fullName: RefAbilityPriority
- uid: LobsterFramework.AbilitySystem.Ability.ConfigName*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.ConfigName
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.ConfigName
  name: ConfigName
  nameWithType: Ability.ConfigName
  fullName: LobsterFramework.AbilitySystem.Ability.ConfigName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LobsterFramework.AbilitySystem.Ability.Config*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Config
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Config
  name: Config
  nameWithType: Ability.Config
  fullName: LobsterFramework.AbilitySystem.Ability.Config
- uid: LobsterFramework.AbilitySystem.AbilityConfig
  commentId: T:LobsterFramework.AbilitySystem.AbilityConfig
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityConfig.html
  name: AbilityConfig
  nameWithType: AbilityConfig
  fullName: LobsterFramework.AbilitySystem.AbilityConfig
- uid: LobsterFramework.AbilitySystem.Ability.Channel*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Channel
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Channel
  name: Channel
  nameWithType: Ability.Channel
  fullName: LobsterFramework.AbilitySystem.Ability.Channel
- uid: LobsterFramework.AbilitySystem.AbilityChannel
  commentId: T:LobsterFramework.AbilitySystem.AbilityChannel
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityChannel.html
  name: AbilityChannel
  nameWithType: AbilityChannel
  fullName: LobsterFramework.AbilitySystem.AbilityChannel
- uid: LobsterFramework.AbilitySystem.Ability.Runtime*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Runtime
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Runtime
  name: Runtime
  nameWithType: Ability.Runtime
  fullName: LobsterFramework.AbilitySystem.Ability.Runtime
- uid: LobsterFramework.AbilitySystem.AbilityRuntime
  commentId: T:LobsterFramework.AbilitySystem.AbilityRuntime
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityRuntime.html
  name: AbilityRuntime
  nameWithType: AbilityRuntime
  fullName: LobsterFramework.AbilitySystem.AbilityRuntime
- uid: LobsterFramework.AbilitySystem.Ability.Clear*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Clear
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Clear
  name: Clear
  nameWithType: Ability.Clear
  fullName: LobsterFramework.AbilitySystem.Ability.Clear
- uid: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  name: CompareByExecutionPriority
  nameWithType: Ability.CompareByExecutionPriority
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority
- uid: LobsterFramework.AbilitySystem.Ability
  commentId: T:LobsterFramework.AbilitySystem.Ability
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.Ability.html
  name: Ability
  nameWithType: Ability
  fullName: LobsterFramework.AbilitySystem.Ability
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority(LobsterFramework.AbilitySystem.Ability)
  name: CompareByEnqueuePriority
  nameWithType: Ability.CompareByEnqueuePriority
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByEnqueuePriority
- uid: LobsterFramework.AbilitySystem.Ability.StartAnimation*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.StartAnimation
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.StartAnimation(System.String,UnityEngine.AnimationClip,System.Single)
  name: StartAnimation
  nameWithType: Ability.StartAnimation
  fullName: LobsterFramework.AbilitySystem.Ability.StartAnimation
- uid: UnityEngine.AnimationClip
  commentId: T:UnityEngine.AnimationClip
  parent: UnityEngine
  isExternal: true
  name: AnimationClip
  nameWithType: AnimationClip
  fullName: UnityEngine.AnimationClip
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  name: ConditionSatisfied
  nameWithType: Ability.ConditionSatisfied
  fullName: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LobsterFramework.AbilitySystem.Ability.Running*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Running
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Running
  name: Running
  nameWithType: Ability.Running
  fullName: LobsterFramework.AbilitySystem.Ability.Running
- uid: LobsterFramework.AbilitySystem.Ability.SuspendInstance*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.SuspendInstance
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.SuspendInstance(System.String)
  name: SuspendInstance
  nameWithType: Ability.SuspendInstance
  fullName: LobsterFramework.AbilitySystem.Ability.SuspendInstance
- uid: LobsterFramework.AbilitySystem.Ability.SuspendAll*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.SuspendAll
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.SuspendAll
  name: SuspendAll
  nameWithType: Ability.SuspendAll
  fullName: LobsterFramework.AbilitySystem.Ability.SuspendAll
- uid: LobsterFramework.AbilitySystem.Ability.Initialize*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Initialize
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Initialize
  name: Initialize
  nameWithType: Ability.Initialize
  fullName: LobsterFramework.AbilitySystem.Ability.Initialize
- uid: LobsterFramework.AbilitySystem.Ability.IsExecuting*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.IsExecuting
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.IsExecuting(System.String)
  name: IsExecuting
  nameWithType: Ability.IsExecuting
  fullName: LobsterFramework.AbilitySystem.Ability.IsExecuting
- uid: LobsterFramework.AbilitySystem.Ability.IsReady*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.IsReady
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  name: IsReady
  nameWithType: Ability.IsReady
  fullName: LobsterFramework.AbilitySystem.Ability.IsReady
- uid: LobsterFramework.AbilitySystem.Ability.Action*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Action
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Action
  name: Action
  nameWithType: Ability.Action
  fullName: LobsterFramework.AbilitySystem.Ability.Action
- uid: LobsterFramework.AbilitySystem.Ability.OnActionFinish*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnActionFinish
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnActionFinish
  name: OnActionFinish
  nameWithType: Ability.OnActionFinish
  fullName: LobsterFramework.AbilitySystem.Ability.OnActionFinish
- uid: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  name: OnAnimationInterrupt
  nameWithType: Ability.OnAnimationInterrupt
  fullName: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt
- uid: Animancer.AnimancerState
  commentId: T:Animancer.AnimancerState
  parent: Animancer
  name: AnimancerState
  nameWithType: AnimancerState
  fullName: Animancer.AnimancerState
- uid: Animancer
  commentId: N:Animancer
  name: Animancer
  nameWithType: Animancer
  fullName: Animancer
- uid: LobsterFramework.AbilitySystem.Ability.OnEnqueue*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnEnqueue
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnEnqueue
  name: OnEnqueue
  nameWithType: Ability.OnEnqueue
  fullName: LobsterFramework.AbilitySystem.Ability.OnEnqueue
- uid: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.JoinAsSecondary
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.JoinAsSecondary``1(System.String)
  name: JoinAsSecondary
  nameWithType: Ability.JoinAsSecondary
  fullName: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: LobsterFramework.AbilitySystem.Ability.HasConfig*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.HasConfig
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.HasConfig(System.String)
  name: HasConfig
  nameWithType: Ability.HasConfig
  fullName: LobsterFramework.AbilitySystem.Ability.HasConfig
- uid: LobsterFramework.AbilitySystem.Ability.Signal*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Signal
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Signal(System.String,UnityEngine.AnimationEvent)
  name: Signal
  nameWithType: Ability.Signal
  fullName: LobsterFramework.AbilitySystem.Ability.Signal
- uid: UnityEngine.AnimationEvent
  commentId: T:UnityEngine.AnimationEvent
  parent: UnityEngine
  isExternal: true
  name: AnimationEvent
  nameWithType: AnimationEvent
  fullName: UnityEngine.AnimationEvent
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnSignaled
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  name: OnSignaled
  nameWithType: Ability.OnSignaled
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled
