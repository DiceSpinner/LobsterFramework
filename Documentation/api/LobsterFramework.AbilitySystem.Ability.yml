### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.Ability
  commentId: T:LobsterFramework.AbilitySystem.Ability
  id: Ability
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.Ability.Action
  - LobsterFramework.AbilitySystem.Ability.Channel
  - LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  - LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  - LobsterFramework.AbilitySystem.Ability.Config
  - LobsterFramework.AbilitySystem.Ability.Context
  - LobsterFramework.AbilitySystem.Ability.DefaultAbilityInstance
  - LobsterFramework.AbilitySystem.Ability.ExecutionPriority
  - LobsterFramework.AbilitySystem.Ability.FinalizeContext
  - LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences
  - LobsterFramework.AbilitySystem.Ability.GetAbilityComponent``1
  - LobsterFramework.AbilitySystem.Ability.GetComponentReference``1(System.Int32)
  - LobsterFramework.AbilitySystem.Ability.HasInstance(System.String)
  - LobsterFramework.AbilitySystem.Ability.InitializeContext
  - LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences
  - LobsterFramework.AbilitySystem.Ability.Instance
  - LobsterFramework.AbilitySystem.Ability.InstancesRunning
  - LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  - LobsterFramework.AbilitySystem.Ability.IsRunning(System.String)
  - LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type,System.String)
  - LobsterFramework.AbilitySystem.Ability.JoinAsSecondary``1(System.String)
  - LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue
  - LobsterFramework.AbilitySystem.Ability.OnAbilityFinish
  - LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  - LobsterFramework.AbilitySystem.Ability.OnSignaled
  - LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  - LobsterFramework.AbilitySystem.Ability.StartAnimation(UnityEngine.AnimationClip,System.Single)
  - LobsterFramework.AbilitySystem.Ability.SuspendAll
  - LobsterFramework.AbilitySystem.Ability.SuspendInstance(System.String)
  - LobsterFramework.AbilitySystem.Ability.abilityManager
  langs:
  - csharp
  - vb
  name: Ability
  nameWithType: Ability
  fullName: LobsterFramework.AbilitySystem.Ability
  type: Class
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Ability
    path: ../AbilitySystem/Ability.cs
    startLine: 15
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Represents an ability in the ability system. Allows multiple instances to be defined. Can be customized via <xref href="LobsterFramework.AbilitySystem.AbilityData" data-throw-if-not-resolved="false"></xref> inspector.
  example: []
  syntax:
    content: 'public abstract class Ability : ScriptableObject'
    content.vb: Public MustInherit Class Ability Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  derivedClasses:
  - LobsterFramework.AbilitySystem.AbilityCoroutine
  - LobsterFramework.AbilitySystem.WeaponSystem.OffhandAbility
  - LobsterFramework.AbilitySystem.WeaponSystem.WeaponArt
  inheritedMembers:
  - UnityEngine.ScriptableObject.SetDirty
  - UnityEngine.ScriptableObject.CreateInstance(System.String)
  - UnityEngine.ScriptableObject.CreateInstance(System.Type)
  - UnityEngine.ScriptableObject.CreateInstance``1
  - UnityEngine.Object.GetInstanceID
  - UnityEngine.Object.GetHashCode
  - UnityEngine.Object.Equals(System.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Instantiate``1({T})
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  - UnityEngine.Object.Destroy(UnityEngine.Object)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  - UnityEngine.Object.FindObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object)
  - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  - UnityEngine.Object.FindObjectsOfType``1
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectOfType``1
  - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType``1
  - UnityEngine.Object.FindAnyObjectByType``1
  - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type)
  - UnityEngine.Object.FindFirstObjectByType(System.Type)
  - UnityEngine.Object.FindAnyObjectByType(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.ToString
  - UnityEngine.Object.name
  - UnityEngine.Object.hideFlags
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LobsterFramework.AbilitySystem.Ability.DefaultAbilityInstance
  commentId: F:LobsterFramework.AbilitySystem.Ability.DefaultAbilityInstance
  id: DefaultAbilityInstance
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: DefaultAbilityInstance
  nameWithType: Ability.DefaultAbilityInstance
  fullName: LobsterFramework.AbilitySystem.Ability.DefaultAbilityInstance
  type: Field
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: DefaultAbilityInstance
    path: ../AbilitySystem/Ability.cs
    startLine: 17
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public const string DefaultAbilityInstance = "default"
    return:
      type: System.String
    content.vb: Public Const DefaultAbilityInstance As String = "default"
- uid: LobsterFramework.AbilitySystem.Ability.abilityManager
  commentId: P:LobsterFramework.AbilitySystem.Ability.abilityManager
  id: abilityManager
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: abilityManager
  nameWithType: Ability.abilityManager
  fullName: LobsterFramework.AbilitySystem.Ability.abilityManager
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: abilityManager
    path: ../AbilitySystem/Ability.cs
    startLine: 25
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected AbilityManager abilityManager { get; }
    parameters: []
    return:
      type: LobsterFramework.AbilitySystem.AbilityManager
    content.vb: Protected Property abilityManager As AbilityManager
  overload: LobsterFramework.AbilitySystem.Ability.abilityManager*
- uid: LobsterFramework.AbilitySystem.Ability.ExecutionPriority
  commentId: P:LobsterFramework.AbilitySystem.Ability.ExecutionPriority
  id: ExecutionPriority
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: ExecutionPriority
  nameWithType: Ability.ExecutionPriority
  fullName: LobsterFramework.AbilitySystem.Ability.ExecutionPriority
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: ExecutionPriority
    path: ../AbilitySystem/Ability.cs
    startLine: 31
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: The priority in which this ability will be executed. Higher number means earlier execution in relation to other abilities.
  example: []
  syntax:
    content: public int ExecutionPriority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ExecutionPriority As Integer
  overload: LobsterFramework.AbilitySystem.Ability.ExecutionPriority*
- uid: LobsterFramework.AbilitySystem.Ability.Instance
  commentId: P:LobsterFramework.AbilitySystem.Ability.Instance
  id: Instance
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: Ability.Instance
  fullName: LobsterFramework.AbilitySystem.Ability.Instance
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Instance
    path: ../AbilitySystem/Ability.cs
    startLine: 32
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected string Instance { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property Instance As String
  overload: LobsterFramework.AbilitySystem.Ability.Instance*
- uid: LobsterFramework.AbilitySystem.Ability.Config
  commentId: P:LobsterFramework.AbilitySystem.Ability.Config
  id: Config
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Ability.Config
  fullName: LobsterFramework.AbilitySystem.Ability.Config
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Config
    path: ../AbilitySystem/Ability.cs
    startLine: 36
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: The configuration of the currently executing ability instance
  example: []
  syntax:
    content: protected AbilityConfig Config { get; }
    parameters: []
    return:
      type: LobsterFramework.AbilitySystem.AbilityConfig
    content.vb: Protected Property Config As AbilityConfig
  overload: LobsterFramework.AbilitySystem.Ability.Config*
- uid: LobsterFramework.AbilitySystem.Ability.Channel
  commentId: P:LobsterFramework.AbilitySystem.Ability.Channel
  id: Channel
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: Ability.Channel
  fullName: LobsterFramework.AbilitySystem.Ability.Channel
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Channel
    path: ../AbilitySystem/Ability.cs
    startLine: 41
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: The communication channel with client code of the currently executing ability instance
  example: []
  syntax:
    content: protected AbilityChannel Channel { get; }
    parameters: []
    return:
      type: LobsterFramework.AbilitySystem.AbilityChannel
    content.vb: Protected Property Channel As AbilityChannel
  overload: LobsterFramework.AbilitySystem.Ability.Channel*
- uid: LobsterFramework.AbilitySystem.Ability.Context
  commentId: P:LobsterFramework.AbilitySystem.Ability.Context
  id: Context
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: Ability.Context
  fullName: LobsterFramework.AbilitySystem.Ability.Context
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Context
    path: ../AbilitySystem/Ability.cs
    startLine: 46
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: The runtime context object of the currently executing ability instance
  example: []
  syntax:
    content: protected AbilityContext Context { get; }
    parameters: []
    return:
      type: LobsterFramework.AbilitySystem.AbilityContext
    content.vb: Protected Property Context As AbilityContext
  overload: LobsterFramework.AbilitySystem.Ability.Context*
- uid: LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences
  commentId: M:LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences
  id: InitializeSharedReferences
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: InitializeSharedReferences()
  nameWithType: Ability.InitializeSharedReferences()
  fullName: LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: InitializeSharedReferences
    path: ../AbilitySystem/Ability.cs
    startLine: 147
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Called to initialize the references shared by all ability instances
  example: []
  syntax:
    content: protected virtual void InitializeSharedReferences()
    content.vb: Protected Overridable Sub InitializeSharedReferences()
  overload: LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences*
- uid: LobsterFramework.AbilitySystem.Ability.InitializeContext
  commentId: M:LobsterFramework.AbilitySystem.Ability.InitializeContext
  id: InitializeContext
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: InitializeContext()
  nameWithType: Ability.InitializeContext()
  fullName: LobsterFramework.AbilitySystem.Ability.InitializeContext()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: InitializeContext
    path: ../AbilitySystem/Ability.cs
    startLine: 152
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Called to initialize ability context and channels
  example: []
  syntax:
    content: protected virtual void InitializeContext()
    content.vb: Protected Overridable Sub InitializeContext()
  overload: LobsterFramework.AbilitySystem.Ability.InitializeContext*
- uid: LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences
  commentId: M:LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences
  id: FinalizeSharedReferences
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: FinalizeSharedReferences()
  nameWithType: Ability.FinalizeSharedReferences()
  fullName: LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: FinalizeSharedReferences
    path: ../AbilitySystem/Ability.cs
    startLine: 170
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Called to finialize the references shared by all ability instances
  example: []
  syntax:
    content: protected virtual void FinalizeSharedReferences()
    content.vb: Protected Overridable Sub FinalizeSharedReferences()
  overload: LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences*
- uid: LobsterFramework.AbilitySystem.Ability.FinalizeContext
  commentId: M:LobsterFramework.AbilitySystem.Ability.FinalizeContext
  id: FinalizeContext
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: FinalizeContext()
  nameWithType: Ability.FinalizeContext()
  fullName: LobsterFramework.AbilitySystem.Ability.FinalizeContext()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: FinalizeContext
    path: ../AbilitySystem/Ability.cs
    startLine: 175
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Called to finialize the ability context and channels
  example: []
  syntax:
    content: protected virtual void FinalizeContext()
    content.vb: Protected Overridable Sub FinalizeContext()
  overload: LobsterFramework.AbilitySystem.Ability.FinalizeContext*
- uid: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  commentId: M:LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  id: CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: CompareByExecutionPriority(Ability)
  nameWithType: Ability.CompareByExecutionPriority(Ability)
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: CompareByExecutionPriority
    path: ../AbilitySystem/Ability.cs
    startLine: 186
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public int CompareByExecutionPriority(Ability other)
    parameters:
    - id: other
      type: LobsterFramework.AbilitySystem.Ability
    return:
      type: System.Int32
    content.vb: Public Function CompareByExecutionPriority(other As Ability) As Integer
  overload: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority*
- uid: LobsterFramework.AbilitySystem.Ability.StartAnimation(UnityEngine.AnimationClip,System.Single)
  commentId: M:LobsterFramework.AbilitySystem.Ability.StartAnimation(UnityEngine.AnimationClip,System.Single)
  id: StartAnimation(UnityEngine.AnimationClip,System.Single)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: StartAnimation(AnimationClip, float)
  nameWithType: Ability.StartAnimation(AnimationClip, float)
  fullName: LobsterFramework.AbilitySystem.Ability.StartAnimation(UnityEngine.AnimationClip, float)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: StartAnimation
    path: ../AbilitySystem/Ability.cs
    startLine: 193
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected AnimancerState StartAnimation(AnimationClip animation, float speed = 1)
    parameters:
    - id: animation
      type: UnityEngine.AnimationClip
    - id: speed
      type: System.Single
    return:
      type: Animancer.AnimancerState
    content.vb: Protected Function StartAnimation(animation As AnimationClip, speed As Single = 1) As AnimancerState
  overload: LobsterFramework.AbilitySystem.Ability.StartAnimation*
  nameWithType.vb: Ability.StartAnimation(AnimationClip, Single)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.StartAnimation(UnityEngine.AnimationClip, Single)
  name.vb: StartAnimation(AnimationClip, Single)
- uid: LobsterFramework.AbilitySystem.Ability.GetComponentReference``1(System.Int32)
  commentId: M:LobsterFramework.AbilitySystem.Ability.GetComponentReference``1(System.Int32)
  id: GetComponentReference``1(System.Int32)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: GetComponentReference<T>(int)
  nameWithType: Ability.GetComponentReference<T>(int)
  fullName: LobsterFramework.AbilitySystem.Ability.GetComponentReference<T>(int)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: GetComponentReference
    path: ../AbilitySystem/Ability.cs
    startLine: 206
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Attempts to get the reference of the specified component type from <xref href="LobsterFramework.AbilitySystem.AbilityManager" data-throw-if-not-resolved="false"></xref>. 

    The type of the reference should be one of the required types applied via <xref href="LobsterFramework.RequireComponentReferenceAttribute" data-throw-if-not-resolved="false"></xref> on this ability class.
  remarks: This is a shorthand call for <xref href="LobsterFramework.ReferenceProvider.GetComponentReference%60%601(System.Type%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> via <xref href="LobsterFramework.AbilitySystem.Ability.abilityManager" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'protected T GetComponentReference<T>(int index = 0) where T : Component'
    parameters:
    - id: index
      type: System.Int32
      description: The index to the list of components of the type specified. Use of type safe enum is strongly recommended.
    typeParameters:
    - id: T
      description: The type of the component looking for
    return:
      type: '{T}'
      description: The component reference stored in <xref href="LobsterFramework.AbilitySystem.AbilityManager" data-throw-if-not-resolved="false"></xref> if it exists, otherwise null
    content.vb: Protected Function GetComponentReference(Of T As Component)(index As Integer = 0) As T
  overload: LobsterFramework.AbilitySystem.Ability.GetComponentReference*
  nameWithType.vb: Ability.GetComponentReference(Of T)(Integer)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.GetComponentReference(Of T)(Integer)
  name.vb: GetComponentReference(Of T)(Integer)
- uid: LobsterFramework.AbilitySystem.Ability.GetAbilityComponent``1
  commentId: M:LobsterFramework.AbilitySystem.Ability.GetAbilityComponent``1
  id: GetAbilityComponent``1
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: GetAbilityComponent<T>()
  nameWithType: Ability.GetAbilityComponent<T>()
  fullName: LobsterFramework.AbilitySystem.Ability.GetAbilityComponent<T>()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: GetAbilityComponent
    path: ../AbilitySystem/Ability.cs
    startLine: 216
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Attempts to get the reference of the specified <xref href="LobsterFramework.AbilitySystem.AbilityComponent" data-throw-if-not-resolved="false"></xref> stored in the same <xref href="LobsterFramework.AbilitySystem.AbilityData" data-throw-if-not-resolved="false"></xref>
  remarks: This is a shorthand call for <xref href="LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent%60%601" data-throw-if-not-resolved="false"></xref> via <xref href="LobsterFramework.AbilitySystem.Ability.abilityManager" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'protected T GetAbilityComponent<T>() where T : AbilityComponent'
    typeParameters:
    - id: T
      description: The type of the <xref href="LobsterFramework.AbilitySystem.AbilityComponent" data-throw-if-not-resolved="false"></xref> being asked for
    return:
      type: '{T}'
      description: The reference to the <xref href="LobsterFramework.AbilitySystem.AbilityComponent" data-throw-if-not-resolved="false"></xref> if exists
    content.vb: Protected Function GetAbilityComponent(Of T As AbilityComponent)() As T
  overload: LobsterFramework.AbilitySystem.Ability.GetAbilityComponent*
  nameWithType.vb: Ability.GetAbilityComponent(Of T)()
  fullName.vb: LobsterFramework.AbilitySystem.Ability.GetAbilityComponent(Of T)()
  name.vb: GetAbilityComponent(Of T)()
- uid: LobsterFramework.AbilitySystem.Ability.SuspendInstance(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.SuspendInstance(System.String)
  id: SuspendInstance(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: SuspendInstance(string)
  nameWithType: Ability.SuspendInstance(string)
  fullName: LobsterFramework.AbilitySystem.Ability.SuspendInstance(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: SuspendInstance
    path: ../AbilitySystem/Ability.cs
    startLine: 225
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Suspend the execution of the specified ability instance and causing it to finish at the current frame
  example: []
  syntax:
    content: protected bool SuspendInstance(string instance)
    parameters:
    - id: instance
      type: System.String
      description: Name of the configuration of the ability instance to terminate
    return:
      type: System.Boolean
      description: true if the configuration exists and is not running or suspended, otherwise false
    content.vb: Protected Function SuspendInstance(instance As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.SuspendInstance*
  nameWithType.vb: Ability.SuspendInstance(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.SuspendInstance(String)
  name.vb: SuspendInstance(String)
- uid: LobsterFramework.AbilitySystem.Ability.SuspendAll
  commentId: M:LobsterFramework.AbilitySystem.Ability.SuspendAll
  id: SuspendAll
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: SuspendAll()
  nameWithType: Ability.SuspendAll()
  fullName: LobsterFramework.AbilitySystem.Ability.SuspendAll()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: SuspendAll
    path: ../AbilitySystem/Ability.cs
    startLine: 254
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Suspend the execution of all running instances of this ability
  example: []
  syntax:
    content: protected void SuspendAll()
    content.vb: Protected Sub SuspendAll()
  overload: LobsterFramework.AbilitySystem.Ability.SuspendAll*
- uid: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary``1(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.JoinAsSecondary``1(System.String)
  id: JoinAsSecondary``1(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: JoinAsSecondary<T>(string)
  nameWithType: Ability.JoinAsSecondary<T>(string)
  fullName: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary<T>(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: JoinAsSecondary
    path: ../AbilitySystem/Ability.cs
    startLine: 269
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Attempt to join the current running ability with another ability that is running. 

    On success, the current running ability will terminate no later than the joined ability.
  example: []
  syntax:
    content: 'protected bool JoinAsSecondary<T>(string instance) where T : Ability'
    parameters:
    - id: instance
      type: System.String
      description: The name of the instance of the running ability to be joined
    typeParameters:
    - id: T
      description: The type of the ability to be joined with
    return:
      type: System.Boolean
      description: Return true on success, otherwise false
    content.vb: Protected Function JoinAsSecondary(Of T As Ability)(instance As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary*
  nameWithType.vb: Ability.JoinAsSecondary(Of T)(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(Of T)(String)
  name.vb: JoinAsSecondary(Of T)(String)
- uid: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type,System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type,System.String)
  id: JoinAsSecondary(System.Type,System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: JoinAsSecondary(Type, string)
  nameWithType: Ability.JoinAsSecondary(Type, string)
  fullName: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type, string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: JoinAsSecondary
    path: ../AbilitySystem/Ability.cs
    startLine: 281
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Attempt to join the current running ability with another ability that is running. 

    On success, the current running ability will terminate no later than the joined ability.
  example: []
  syntax:
    content: protected bool JoinAsSecondary(Type abilityType, string instance)
    parameters:
    - id: abilityType
      type: System.Type
      description: The type of the ability to be joined with
    - id: instance
      type: System.String
      description: The name of the instance of the ability to be joined
    return:
      type: System.Boolean
      description: Return true on success, otherwise false
    content.vb: Protected Function JoinAsSecondary(abilityType As Type, instance As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary*
  nameWithType.vb: Ability.JoinAsSecondary(Type, String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary(System.Type, String)
  name.vb: JoinAsSecondary(Type, String)
- uid: LobsterFramework.AbilitySystem.Ability.InstancesRunning
  commentId: P:LobsterFramework.AbilitySystem.Ability.InstancesRunning
  id: InstancesRunning
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: InstancesRunning
  nameWithType: Ability.InstancesRunning
  fullName: LobsterFramework.AbilitySystem.Ability.InstancesRunning
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: InstancesRunning
    path: ../AbilitySystem/Ability.cs
    startLine: 383
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: The number of instances of this ability is running
  example: []
  syntax:
    content: public int InstancesRunning { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property InstancesRunning As Integer
  overload: LobsterFramework.AbilitySystem.Ability.InstancesRunning*
- uid: LobsterFramework.AbilitySystem.Ability.IsRunning(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.IsRunning(System.String)
  id: IsRunning(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: IsRunning(string)
  nameWithType: Ability.IsRunning(string)
  fullName: LobsterFramework.AbilitySystem.Ability.IsRunning(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: IsRunning
    path: ../AbilitySystem/Ability.cs
    startLine: 390
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Check if the ability instance is executing, this method will return false if the instance is not present
  example: []
  syntax:
    content: public bool IsRunning(string instance)
    parameters:
    - id: instance
      type: System.String
      description: The name of the instance to be examined
    return:
      type: System.Boolean
      description: true if the specified instance is executing, otherwise false
    content.vb: Public Function IsRunning(instance As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.IsRunning*
  nameWithType.vb: Ability.IsRunning(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.IsRunning(String)
  name.vb: IsRunning(String)
- uid: LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  id: IsReady(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: IsReady(string)
  nameWithType: Ability.IsReady(string)
  fullName: LobsterFramework.AbilitySystem.Ability.IsReady(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: IsReady
    path: ../AbilitySystem/Ability.cs
    startLine: 400
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Check if the speficied ability instance is ready
  example: []
  syntax:
    content: public bool IsReady(string instance)
    parameters:
    - id: instance
      type: System.String
      description: The name of the instance of the ability instance
    return:
      type: System.Boolean
      description: true if config with specified name exists and is ready, false otherwise
    content.vb: Public Function IsReady(instance As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.IsReady*
  nameWithType.vb: Ability.IsReady(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.IsReady(String)
  name.vb: IsReady(String)
- uid: LobsterFramework.AbilitySystem.Ability.HasInstance(System.String)
  commentId: M:LobsterFramework.AbilitySystem.Ability.HasInstance(System.String)
  id: HasInstance(System.String)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: HasInstance(string)
  nameWithType: Ability.HasInstance(string)
  fullName: LobsterFramework.AbilitySystem.Ability.HasInstance(string)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: HasInstance
    path: ../AbilitySystem/Ability.cs
    startLine: 416
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Check if the ability has specified configuration
  example: []
  syntax:
    content: public bool HasInstance(string instance)
    parameters:
    - id: instance
      type: System.String
      description: Name of the ability instance being queried
    return:
      type: System.Boolean
      description: true if exists, false otherwise
    content.vb: Public Function HasInstance(instance As String) As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.HasInstance*
  nameWithType.vb: Ability.HasInstance(String)
  fullName.vb: LobsterFramework.AbilitySystem.Ability.HasInstance(String)
  name.vb: HasInstance(String)
- uid: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  commentId: M:LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  id: ConditionSatisfied
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: ConditionSatisfied()
  nameWithType: Ability.ConditionSatisfied()
  fullName: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: ConditionSatisfied
    path: ../AbilitySystem/Ability.cs
    startLine: 427
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Used for doing additional requirement check for running the ability.
  example: []
  syntax:
    content: protected virtual bool ConditionSatisfied()
    return:
      type: System.Boolean
      description: true if the condition for this ability has been satisfied, otherwise false
    content.vb: Protected Overridable Function ConditionSatisfied() As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied*
- uid: LobsterFramework.AbilitySystem.Ability.Action
  commentId: M:LobsterFramework.AbilitySystem.Ability.Action
  id: Action
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: Action()
  nameWithType: Ability.Action()
  fullName: LobsterFramework.AbilitySystem.Ability.Action()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Action
    path: ../AbilitySystem/Ability.cs
    startLine: 433
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Called every frame while the ability instance remains in the execution queue.
  example: []
  syntax:
    content: protected abstract bool Action()
    return:
      type: System.Boolean
      description: false if the ability has finished and should not execute further, otherwise true
    content.vb: Protected MustOverride Function Action() As Boolean
  overload: LobsterFramework.AbilitySystem.Ability.Action*
- uid: LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue
  id: OnAbilityEnqueue
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnAbilityEnqueue()
  nameWithType: Ability.OnAbilityEnqueue()
  fullName: LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnAbilityEnqueue
    path: ../AbilitySystem/Ability.cs
    startLine: 438
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Called when the ability is added to the queue for execution
  example: []
  syntax:
    content: protected virtual void OnAbilityEnqueue()
    content.vb: Protected Overridable Sub OnAbilityEnqueue()
  overload: LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue*
- uid: LobsterFramework.AbilitySystem.Ability.OnAbilityFinish
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnAbilityFinish
  id: OnAbilityFinish
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnAbilityFinish()
  nameWithType: Ability.OnAbilityFinish()
  fullName: LobsterFramework.AbilitySystem.Ability.OnAbilityFinish()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnAbilityFinish
    path: ../AbilitySystem/Ability.cs
    startLine: 443
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Called when the ability is finished or halted.
  example: []
  syntax:
    content: protected virtual void OnAbilityFinish()
    content.vb: Protected Overridable Sub OnAbilityFinish()
  overload: LobsterFramework.AbilitySystem.Ability.OnAbilityFinish*
- uid: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  id: OnAnimationInterrupt(Animancer.AnimancerState)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnAnimationInterrupt(AnimancerState)
  nameWithType: Ability.OnAnimationInterrupt(AnimancerState)
  fullName: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnAnimationInterrupt
    path: ../AbilitySystem/Ability.cs
    startLine: 449
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Called when the animation of the ability is interrupted by other abilities. Useful when abilities relies on animation events.

    Default implementation suspends the ability.
  example: []
  syntax:
    content: protected virtual void OnAnimationInterrupt(AnimancerState state)
    parameters:
    - id: state
      type: Animancer.AnimancerState
    content.vb: Protected Overridable Sub OnAnimationInterrupt(state As AnimancerState)
  overload: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt*
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  id: OnSignaled(UnityEngine.AnimationEvent)
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnSignaled(AnimationEvent)
  nameWithType: Ability.OnSignaled(AnimationEvent)
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnSignaled
    path: ../AbilitySystem/Ability.cs
    startLine: 487
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Signal handler for animation event.
  example: []
  syntax:
    content: protected virtual void OnSignaled(AnimationEvent animationEvent)
    parameters:
    - id: animationEvent
      type: UnityEngine.AnimationEvent
    content.vb: Protected Overridable Sub OnSignaled(animationEvent As AnimationEvent)
  overload: LobsterFramework.AbilitySystem.Ability.OnSignaled*
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled
  commentId: M:LobsterFramework.AbilitySystem.Ability.OnSignaled
  id: OnSignaled
  parent: LobsterFramework.AbilitySystem.Ability
  langs:
  - csharp
  - vb
  name: OnSignaled()
  nameWithType: Ability.OnSignaled()
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled()
  type: Method
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnSignaled
    path: ../AbilitySystem/Ability.cs
    startLine: 492
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: Signal handler for user event.
  example: []
  syntax:
    content: protected virtual void OnSignaled()
    content.vb: Protected Overridable Sub OnSignaled()
  overload: LobsterFramework.AbilitySystem.Ability.OnSignaled*
references:
- uid: LobsterFramework.AbilitySystem.AbilityData
  commentId: T:LobsterFramework.AbilitySystem.AbilityData
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityData.html
  name: AbilityData
  nameWithType: AbilityData
  fullName: LobsterFramework.AbilitySystem.AbilityData
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  href: LobsterFramework.html
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEngine.ScriptableObject.SetDirty
  commentId: M:UnityEngine.ScriptableObject.SetDirty
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: SetDirty()
  nameWithType: ScriptableObject.SetDirty()
  fullName: UnityEngine.ScriptableObject.SetDirty()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.SetDirty
    name: SetDirty
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.String)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CreateInstance(string)
  nameWithType: ScriptableObject.CreateInstance(string)
  fullName: UnityEngine.ScriptableObject.CreateInstance(string)
  nameWithType.vb: ScriptableObject.CreateInstance(String)
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(String)
  name.vb: CreateInstance(String)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.String)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  commentId: M:UnityEngine.ScriptableObject.CreateInstance(System.Type)
  parent: UnityEngine.ScriptableObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CreateInstance(Type)
  nameWithType: ScriptableObject.CreateInstance(Type)
  fullName: UnityEngine.ScriptableObject.CreateInstance(System.Type)
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance(System.Type)
    name: CreateInstance
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.ScriptableObject.CreateInstance``1
  commentId: M:UnityEngine.ScriptableObject.CreateInstance``1
  parent: UnityEngine.ScriptableObject
  isExternal: true
  name: CreateInstance<T>()
  nameWithType: ScriptableObject.CreateInstance<T>()
  fullName: UnityEngine.ScriptableObject.CreateInstance<T>()
  nameWithType.vb: ScriptableObject.CreateInstance(Of T)()
  fullName.vb: UnityEngine.ScriptableObject.CreateInstance(Of T)()
  name.vb: CreateInstance(Of T)()
  spec.csharp:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.ScriptableObject.CreateInstance``1
    name: CreateInstance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.GetInstanceID
  commentId: M:UnityEngine.Object.GetInstanceID
  parent: UnityEngine.Object
  isExternal: true
  name: GetInstanceID()
  nameWithType: Object.GetInstanceID()
  fullName: UnityEngine.Object.GetInstanceID()
  spec.csharp:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Equals(object)
  nameWithType: Object.Equals(object)
  fullName: UnityEngine.Object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: UnityEngine.Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object)
  nameWithType: Object.Instantiate(Object)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform)
  nameWithType: Object.Instantiate(Object, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate(Object, Transform, bool)
  nameWithType: Object.Instantiate(Object, Transform, bool)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Object, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Object, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T})
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0)
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Destroy(Object, float)
  nameWithType: Object.Destroy(Object, float)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object, float)
  nameWithType.vb: Object.Destroy(Object, Single)
  fullName.vb: UnityEngine.Object.Destroy(UnityEngine.Object, Single)
  name.vb: Destroy(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object)
  nameWithType: Object.Destroy(Object)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DestroyImmediate(Object, bool)
  nameWithType: Object.DestroyImmediate(Object, bool)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, bool)
  nameWithType.vb: Object.DestroyImmediate(Object, Boolean)
  fullName.vb: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, Boolean)
  name.vb: DestroyImmediate(Object, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object)
  nameWithType: Object.DestroyImmediate(Object)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type)
  nameWithType: Object.FindObjectsOfType(Type)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfType(Type, bool)
  nameWithType: Object.FindObjectsOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectsOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(System.Type, Boolean)
  name.vb: FindObjectsOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DontDestroyOnLoad(Object)
  nameWithType: Object.DontDestroyOnLoad(Object)
  fullName: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DestroyObject(Object, float)
  nameWithType: Object.DestroyObject(Object, float)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object, float)
  nameWithType.vb: Object.DestroyObject(Object, Single)
  fullName.vb: UnityEngine.Object.DestroyObject(UnityEngine.Object, Single)
  name.vb: DestroyObject(Object, Single)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object)
  nameWithType: Object.DestroyObject(Object)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    isExternal: true
  - name: (
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindSceneObjectsOfType(Type)
  nameWithType: Object.FindSceneObjectsOfType(Type)
  fullName: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeIncludingAssets(Type)
  nameWithType: Object.FindObjectsOfTypeIncludingAssets(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1
  commentId: M:UnityEngine.Object.FindObjectsOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>()
  nameWithType: Object.FindObjectsOfType<T>()
  fullName: UnityEngine.Object.FindObjectsOfType<T>()
  nameWithType.vb: Object.FindObjectsOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)()
  name.vb: FindObjectsOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectsOfType<T>(bool)
  nameWithType: Object.FindObjectsOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectsOfType<T>(bool)
  nameWithType.vb: Object.FindObjectsOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)(Boolean)
  name.vb: FindObjectsOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1
  commentId: M:UnityEngine.Object.FindObjectOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>()
  nameWithType: Object.FindObjectOfType<T>()
  fullName: UnityEngine.Object.FindObjectOfType<T>()
  nameWithType.vb: Object.FindObjectOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)()
  name.vb: FindObjectOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindObjectOfType<T>(bool)
  nameWithType: Object.FindObjectOfType<T>(bool)
  fullName: UnityEngine.Object.FindObjectOfType<T>(bool)
  nameWithType.vb: Object.FindObjectOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)(Boolean)
  name.vb: FindObjectOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>()
  nameWithType: Object.FindFirstObjectByType<T>()
  fullName: UnityEngine.Object.FindFirstObjectByType<T>()
  nameWithType.vb: Object.FindFirstObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)()
  name.vb: FindFirstObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>()
  nameWithType: Object.FindAnyObjectByType<T>()
  fullName: UnityEngine.Object.FindAnyObjectByType<T>()
  nameWithType.vb: Object.FindAnyObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)()
  name.vb: FindAnyObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindFirstObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindFirstObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindAnyObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindAnyObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectsOfTypeAll(Type)
  nameWithType: Object.FindObjectsOfTypeAll(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type)
  nameWithType: Object.FindObjectOfType(Type)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type)
  nameWithType: Object.FindFirstObjectByType(Type)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type)
  nameWithType: Object.FindAnyObjectByType(Type)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindObjectOfType(Type, bool)
  nameWithType: Object.FindObjectOfType(Type, bool)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type, bool)
  nameWithType.vb: Object.FindObjectOfType(Type, Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(System.Type, Boolean)
  name.vb: FindObjectOfType(Type, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindFirstObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: FindAnyObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    isExternal: true
  - name: )
- uid: UnityEngine.Object.ToString
  commentId: M:UnityEngine.Object.ToString
  parent: UnityEngine.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: UnityEngine.Object.ToString()
  spec.csharp:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  parent: UnityEngine.Object
  isExternal: true
  name: name
  nameWithType: Object.name
  fullName: UnityEngine.Object.name
- uid: UnityEngine.Object.hideFlags
  commentId: P:UnityEngine.Object.hideFlags
  parent: UnityEngine.Object
  isExternal: true
  name: hideFlags
  nameWithType: Object.hideFlags
  fullName: UnityEngine.Object.hideFlags
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Object.Instantiate``1(``0)
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  isExternal: true
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Quaternion
    name: Quaternion
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Instantiate<T>(T, Transform, bool)
  nameWithType: Object.Instantiate<T>(T, Transform, bool)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: LobsterFramework.AbilitySystem.Ability.abilityManager*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.abilityManager
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.abilityManager
  name: abilityManager
  nameWithType: Ability.abilityManager
  fullName: LobsterFramework.AbilitySystem.Ability.abilityManager
- uid: LobsterFramework.AbilitySystem.AbilityManager
  commentId: T:LobsterFramework.AbilitySystem.AbilityManager
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityManager.html
  name: AbilityManager
  nameWithType: AbilityManager
  fullName: LobsterFramework.AbilitySystem.AbilityManager
- uid: LobsterFramework.AbilitySystem.Ability.ExecutionPriority*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.ExecutionPriority
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.ExecutionPriority
  name: ExecutionPriority
  nameWithType: Ability.ExecutionPriority
  fullName: LobsterFramework.AbilitySystem.Ability.ExecutionPriority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LobsterFramework.AbilitySystem.Ability.Instance*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Instance
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Instance
  name: Instance
  nameWithType: Ability.Instance
  fullName: LobsterFramework.AbilitySystem.Ability.Instance
- uid: LobsterFramework.AbilitySystem.Ability.Config*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Config
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Config
  name: Config
  nameWithType: Ability.Config
  fullName: LobsterFramework.AbilitySystem.Ability.Config
- uid: LobsterFramework.AbilitySystem.AbilityConfig
  commentId: T:LobsterFramework.AbilitySystem.AbilityConfig
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityConfig.html
  name: AbilityConfig
  nameWithType: AbilityConfig
  fullName: LobsterFramework.AbilitySystem.AbilityConfig
- uid: LobsterFramework.AbilitySystem.Ability.Channel*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Channel
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Channel
  name: Channel
  nameWithType: Ability.Channel
  fullName: LobsterFramework.AbilitySystem.Ability.Channel
- uid: LobsterFramework.AbilitySystem.AbilityChannel
  commentId: T:LobsterFramework.AbilitySystem.AbilityChannel
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityChannel.html
  name: AbilityChannel
  nameWithType: AbilityChannel
  fullName: LobsterFramework.AbilitySystem.AbilityChannel
- uid: LobsterFramework.AbilitySystem.Ability.Context*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Context
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Context
  name: Context
  nameWithType: Ability.Context
  fullName: LobsterFramework.AbilitySystem.Ability.Context
- uid: LobsterFramework.AbilitySystem.AbilityContext
  commentId: T:LobsterFramework.AbilitySystem.AbilityContext
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityContext.html
  name: AbilityContext
  nameWithType: AbilityContext
  fullName: LobsterFramework.AbilitySystem.AbilityContext
- uid: LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences
  name: InitializeSharedReferences
  nameWithType: Ability.InitializeSharedReferences
  fullName: LobsterFramework.AbilitySystem.Ability.InitializeSharedReferences
- uid: LobsterFramework.AbilitySystem.Ability.InitializeContext*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.InitializeContext
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.InitializeContext
  name: InitializeContext
  nameWithType: Ability.InitializeContext
  fullName: LobsterFramework.AbilitySystem.Ability.InitializeContext
- uid: LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences
  name: FinalizeSharedReferences
  nameWithType: Ability.FinalizeSharedReferences
  fullName: LobsterFramework.AbilitySystem.Ability.FinalizeSharedReferences
- uid: LobsterFramework.AbilitySystem.Ability.FinalizeContext*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.FinalizeContext
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.FinalizeContext
  name: FinalizeContext
  nameWithType: Ability.FinalizeContext
  fullName: LobsterFramework.AbilitySystem.Ability.FinalizeContext
- uid: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority(LobsterFramework.AbilitySystem.Ability)
  name: CompareByExecutionPriority
  nameWithType: Ability.CompareByExecutionPriority
  fullName: LobsterFramework.AbilitySystem.Ability.CompareByExecutionPriority
- uid: LobsterFramework.AbilitySystem.Ability
  commentId: T:LobsterFramework.AbilitySystem.Ability
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.Ability.html
  name: Ability
  nameWithType: Ability
  fullName: LobsterFramework.AbilitySystem.Ability
- uid: LobsterFramework.AbilitySystem.Ability.StartAnimation*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.StartAnimation
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.StartAnimation(UnityEngine.AnimationClip,System.Single)
  name: StartAnimation
  nameWithType: Ability.StartAnimation
  fullName: LobsterFramework.AbilitySystem.Ability.StartAnimation
- uid: UnityEngine.AnimationClip
  commentId: T:UnityEngine.AnimationClip
  parent: UnityEngine
  isExternal: true
  name: AnimationClip
  nameWithType: AnimationClip
  fullName: UnityEngine.AnimationClip
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Animancer.AnimancerState
  commentId: T:Animancer.AnimancerState
  parent: Animancer
  name: AnimancerState
  nameWithType: AnimancerState
  fullName: Animancer.AnimancerState
- uid: Animancer
  commentId: N:Animancer
  name: Animancer
  nameWithType: Animancer
  fullName: Animancer
- uid: LobsterFramework.RequireComponentReferenceAttribute
  commentId: T:LobsterFramework.RequireComponentReferenceAttribute
  parent: LobsterFramework
  href: LobsterFramework.RequireComponentReferenceAttribute.html
  name: RequireComponentReferenceAttribute
  nameWithType: RequireComponentReferenceAttribute
  fullName: LobsterFramework.RequireComponentReferenceAttribute
- uid: LobsterFramework.ReferenceProvider.GetComponentReference``1(System.Type,System.Int32)
  commentId: M:LobsterFramework.ReferenceProvider.GetComponentReference``1(System.Type,System.Int32)
  parent: LobsterFramework.ReferenceProvider
  isExternal: true
  href: LobsterFramework.ReferenceProvider.html#LobsterFramework.ReferenceProvider.GetComponentReference``1(System.Type,System.Int32)
  name: GetComponentReference<T>(Type, int)
  nameWithType: ReferenceProvider.GetComponentReference<T>(Type, int)
  fullName: LobsterFramework.ReferenceProvider.GetComponentReference<T>(System.Type, int)
  nameWithType.vb: ReferenceProvider.GetComponentReference(Of T)(Type, Integer)
  fullName.vb: LobsterFramework.ReferenceProvider.GetComponentReference(Of T)(System.Type, Integer)
  name.vb: GetComponentReference(Of T)(Type, Integer)
  spec.csharp:
  - uid: LobsterFramework.ReferenceProvider.GetComponentReference``1(System.Type,System.Int32)
    name: GetComponentReference
    href: LobsterFramework.ReferenceProvider.html#LobsterFramework.ReferenceProvider.GetComponentReference``1(System.Type,System.Int32)
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: LobsterFramework.ReferenceProvider.GetComponentReference``1(System.Type,System.Int32)
    name: GetComponentReference
    href: LobsterFramework.ReferenceProvider.html#LobsterFramework.ReferenceProvider.GetComponentReference``1(System.Type,System.Int32)
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: LobsterFramework.AbilitySystem.Ability.abilityManager
  commentId: P:LobsterFramework.AbilitySystem.Ability.abilityManager
  parent: LobsterFramework.AbilitySystem.Ability
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.abilityManager
  name: abilityManager
  nameWithType: Ability.abilityManager
  fullName: LobsterFramework.AbilitySystem.Ability.abilityManager
- uid: LobsterFramework.AbilitySystem.Ability.GetComponentReference*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.GetComponentReference
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.GetComponentReference``1(System.Int32)
  name: GetComponentReference
  nameWithType: Ability.GetComponentReference
  fullName: LobsterFramework.AbilitySystem.Ability.GetComponentReference
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: LobsterFramework
  commentId: N:LobsterFramework
  href: LobsterFramework.html
  name: LobsterFramework
  nameWithType: LobsterFramework
  fullName: LobsterFramework
- uid: LobsterFramework.ReferenceProvider
  commentId: T:LobsterFramework.ReferenceProvider
  parent: LobsterFramework
  href: LobsterFramework.ReferenceProvider.html
  name: ReferenceProvider
  nameWithType: ReferenceProvider
  fullName: LobsterFramework.ReferenceProvider
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: LobsterFramework.AbilitySystem.AbilityComponent
  commentId: T:LobsterFramework.AbilitySystem.AbilityComponent
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityComponent.html
  name: AbilityComponent
  nameWithType: AbilityComponent
  fullName: LobsterFramework.AbilitySystem.AbilityComponent
- uid: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  commentId: M:LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  href: LobsterFramework.AbilitySystem.AbilityManager.html#LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  name: GetAbilityComponent<T>()
  nameWithType: AbilityManager.GetAbilityComponent<T>()
  fullName: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent<T>()
  nameWithType.vb: AbilityManager.GetAbilityComponent(Of T)()
  fullName.vb: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent(Of T)()
  name.vb: GetAbilityComponent(Of T)()
  spec.csharp:
  - uid: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
    name: GetAbilityComponent
    href: LobsterFramework.AbilitySystem.AbilityManager.html#LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
    name: GetAbilityComponent
    href: LobsterFramework.AbilitySystem.AbilityManager.html#LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: LobsterFramework.AbilitySystem.Ability.GetAbilityComponent*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.GetAbilityComponent
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.GetAbilityComponent``1
  name: GetAbilityComponent
  nameWithType: Ability.GetAbilityComponent
  fullName: LobsterFramework.AbilitySystem.Ability.GetAbilityComponent
- uid: LobsterFramework.AbilitySystem.Ability.SuspendInstance*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.SuspendInstance
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.SuspendInstance(System.String)
  name: SuspendInstance
  nameWithType: Ability.SuspendInstance
  fullName: LobsterFramework.AbilitySystem.Ability.SuspendInstance
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LobsterFramework.AbilitySystem.Ability.SuspendAll*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.SuspendAll
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.SuspendAll
  name: SuspendAll
  nameWithType: Ability.SuspendAll
  fullName: LobsterFramework.AbilitySystem.Ability.SuspendAll
- uid: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.JoinAsSecondary
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.JoinAsSecondary``1(System.String)
  name: JoinAsSecondary
  nameWithType: Ability.JoinAsSecondary
  fullName: LobsterFramework.AbilitySystem.Ability.JoinAsSecondary
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: LobsterFramework.AbilitySystem.Ability.InstancesRunning*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.InstancesRunning
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.InstancesRunning
  name: InstancesRunning
  nameWithType: Ability.InstancesRunning
  fullName: LobsterFramework.AbilitySystem.Ability.InstancesRunning
- uid: LobsterFramework.AbilitySystem.Ability.IsRunning*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.IsRunning
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.IsRunning(System.String)
  name: IsRunning
  nameWithType: Ability.IsRunning
  fullName: LobsterFramework.AbilitySystem.Ability.IsRunning
- uid: LobsterFramework.AbilitySystem.Ability.IsReady*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.IsReady
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.IsReady(System.String)
  name: IsReady
  nameWithType: Ability.IsReady
  fullName: LobsterFramework.AbilitySystem.Ability.IsReady
- uid: LobsterFramework.AbilitySystem.Ability.HasInstance*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.HasInstance
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.HasInstance(System.String)
  name: HasInstance
  nameWithType: Ability.HasInstance
  fullName: LobsterFramework.AbilitySystem.Ability.HasInstance
- uid: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
  name: ConditionSatisfied
  nameWithType: Ability.ConditionSatisfied
  fullName: LobsterFramework.AbilitySystem.Ability.ConditionSatisfied
- uid: LobsterFramework.AbilitySystem.Ability.Action*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.Action
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.Action
  name: Action
  nameWithType: Ability.Action
  fullName: LobsterFramework.AbilitySystem.Ability.Action
- uid: LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue
  name: OnAbilityEnqueue
  nameWithType: Ability.OnAbilityEnqueue
  fullName: LobsterFramework.AbilitySystem.Ability.OnAbilityEnqueue
- uid: LobsterFramework.AbilitySystem.Ability.OnAbilityFinish*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnAbilityFinish
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnAbilityFinish
  name: OnAbilityFinish
  nameWithType: Ability.OnAbilityFinish
  fullName: LobsterFramework.AbilitySystem.Ability.OnAbilityFinish
- uid: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt(Animancer.AnimancerState)
  name: OnAnimationInterrupt
  nameWithType: Ability.OnAnimationInterrupt
  fullName: LobsterFramework.AbilitySystem.Ability.OnAnimationInterrupt
- uid: LobsterFramework.AbilitySystem.Ability.OnSignaled*
  commentId: Overload:LobsterFramework.AbilitySystem.Ability.OnSignaled
  href: LobsterFramework.AbilitySystem.Ability.html#LobsterFramework.AbilitySystem.Ability.OnSignaled(UnityEngine.AnimationEvent)
  name: OnSignaled
  nameWithType: Ability.OnSignaled
  fullName: LobsterFramework.AbilitySystem.Ability.OnSignaled
- uid: UnityEngine.AnimationEvent
  commentId: T:UnityEngine.AnimationEvent
  parent: UnityEngine
  isExternal: true
  name: AnimationEvent
  nameWithType: AnimationEvent
  fullName: UnityEngine.AnimationEvent
