### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.AbilityChannel
  commentId: T:LobsterFramework.AbilitySystem.AbilityChannel
  id: AbilityChannel
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.AbilityChannel.Cooldown
  - LobsterFramework.AbilitySystem.AbilityChannel.IsRunning
  - LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended
  - LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown
  - LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable
  - LobsterFramework.AbilitySystem.AbilityChannel.config
  - LobsterFramework.AbilitySystem.AbilityChannel.context
  langs:
  - csharp
  - vb
  name: AbilityChannel
  nameWithType: AbilityChannel
  fullName: LobsterFramework.AbilitySystem.AbilityChannel
  type: Class
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: AbilityChannel
    path: ../AbilitySystem/Ability.cs
    startLine: 549
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  summary: >-
    Communication channel of the ability. Can be used to control ability behaviors at runtime.

    When creating a new ability, you must also declare a class named "AbilityName"Channel in the same namespace where "AbilityName" is the name of the ability you're creating.

    Can be accessed via <xref href="LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent%60%601" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public class AbilityChannel
    content.vb: Public Class AbilityChannel
  inheritance:
  - System.Object
  derivedClasses:
  - LobsterFramework.AbilitySystem.WeaponSystem.AttackChannel
  - LobsterFramework.AbilitySystem.WeaponSystem.ChargedAttackChannel
  - LobsterFramework.AbilitySystem.WeaponSystem.GuardChannel
  - LobsterFramework.AbilitySystem.WeaponSystem.OffhandAbilityChannel
  - LobsterFramework.AbilitySystem.WeaponSystem.WeaponArtChannel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: LobsterFramework.AbilitySystem.AbilityChannel.context
  commentId: F:LobsterFramework.AbilitySystem.AbilityChannel.context
  id: context
  parent: LobsterFramework.AbilitySystem.AbilityChannel
  langs:
  - csharp
  - vb
  name: context
  nameWithType: AbilityChannel.context
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.context
  type: Field
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: context
    path: ../AbilitySystem/Ability.cs
    startLine: 551
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected AbilityContext context
    return:
      type: LobsterFramework.AbilitySystem.AbilityContext
    content.vb: Protected context As AbilityContext
- uid: LobsterFramework.AbilitySystem.AbilityChannel.config
  commentId: F:LobsterFramework.AbilitySystem.AbilityChannel.config
  id: config
  parent: LobsterFramework.AbilitySystem.AbilityChannel
  langs:
  - csharp
  - vb
  name: config
  nameWithType: AbilityChannel.config
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.config
  type: Field
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: config
    path: ../AbilitySystem/Ability.cs
    startLine: 552
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: protected AbilityConfig config
    return:
      type: LobsterFramework.AbilitySystem.AbilityConfig
    content.vb: Protected config As AbilityConfig
- uid: LobsterFramework.AbilitySystem.AbilityChannel.IsRunning
  commentId: P:LobsterFramework.AbilitySystem.AbilityChannel.IsRunning
  id: IsRunning
  parent: LobsterFramework.AbilitySystem.AbilityChannel
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: AbilityChannel.IsRunning
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.IsRunning
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: IsRunning
    path: ../AbilitySystem/Ability.cs
    startLine: 554
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool IsRunning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRunning As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityChannel.IsRunning*
- uid: LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended
  commentId: P:LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended
  id: IsSuspended
  parent: LobsterFramework.AbilitySystem.AbilityChannel
  langs:
  - csharp
  - vb
  name: IsSuspended
  nameWithType: AbilityChannel.IsSuspended
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: IsSuspended
    path: ../AbilitySystem/Ability.cs
    startLine: 555
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool IsSuspended { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSuspended As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended*
- uid: LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable
  commentId: P:LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable
  id: TimeWhenAvailable
  parent: LobsterFramework.AbilitySystem.AbilityChannel
  langs:
  - csharp
  - vb
  name: TimeWhenAvailable
  nameWithType: AbilityChannel.TimeWhenAvailable
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: TimeWhenAvailable
    path: ../AbilitySystem/Ability.cs
    startLine: 556
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public float TimeWhenAvailable { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TimeWhenAvailable As Single
  overload: LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable*
- uid: LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown
  commentId: P:LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown
  id: OnCooldown
  parent: LobsterFramework.AbilitySystem.AbilityChannel
  langs:
  - csharp
  - vb
  name: OnCooldown
  nameWithType: AbilityChannel.OnCooldown
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: OnCooldown
    path: ../AbilitySystem/Ability.cs
    startLine: 557
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public bool OnCooldown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property OnCooldown As Boolean
  overload: LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown*
- uid: LobsterFramework.AbilitySystem.AbilityChannel.Cooldown
  commentId: P:LobsterFramework.AbilitySystem.AbilityChannel.Cooldown
  id: Cooldown
  parent: LobsterFramework.AbilitySystem.AbilityChannel
  langs:
  - csharp
  - vb
  name: Cooldown
  nameWithType: AbilityChannel.Cooldown
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.Cooldown
  type: Property
  source:
    remote:
      path: AbilitySystem/Ability.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Cooldown
    path: ../AbilitySystem/Ability.cs
    startLine: 558
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public float Cooldown { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Cooldown As Single
  overload: LobsterFramework.AbilitySystem.AbilityChannel.Cooldown*
references:
- uid: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  commentId: M:LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  href: LobsterFramework.AbilitySystem.AbilityManager.html#LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  name: GetAbilityComponent<T>()
  nameWithType: AbilityManager.GetAbilityComponent<T>()
  fullName: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent<T>()
  nameWithType.vb: AbilityManager.GetAbilityComponent(Of T)()
  fullName.vb: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent(Of T)()
  name.vb: GetAbilityComponent(Of T)()
  spec.csharp:
  - uid: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
    name: GetAbilityComponent
    href: LobsterFramework.AbilitySystem.AbilityManager.html#LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
    name: GetAbilityComponent
    href: LobsterFramework.AbilitySystem.AbilityManager.html#LobsterFramework.AbilitySystem.AbilityManager.GetAbilityComponent``1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  href: LobsterFramework.html
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LobsterFramework.AbilitySystem.AbilityContext
  commentId: T:LobsterFramework.AbilitySystem.AbilityContext
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityContext.html
  name: AbilityContext
  nameWithType: AbilityContext
  fullName: LobsterFramework.AbilitySystem.AbilityContext
- uid: LobsterFramework.AbilitySystem.AbilityConfig
  commentId: T:LobsterFramework.AbilitySystem.AbilityConfig
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.AbilityConfig.html
  name: AbilityConfig
  nameWithType: AbilityConfig
  fullName: LobsterFramework.AbilitySystem.AbilityConfig
- uid: LobsterFramework.AbilitySystem.AbilityChannel.IsRunning*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityChannel.IsRunning
  href: LobsterFramework.AbilitySystem.AbilityChannel.html#LobsterFramework.AbilitySystem.AbilityChannel.IsRunning
  name: IsRunning
  nameWithType: AbilityChannel.IsRunning
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.IsRunning
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended
  href: LobsterFramework.AbilitySystem.AbilityChannel.html#LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended
  name: IsSuspended
  nameWithType: AbilityChannel.IsSuspended
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.IsSuspended
- uid: LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable
  href: LobsterFramework.AbilitySystem.AbilityChannel.html#LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable
  name: TimeWhenAvailable
  nameWithType: AbilityChannel.TimeWhenAvailable
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.TimeWhenAvailable
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown
  href: LobsterFramework.AbilitySystem.AbilityChannel.html#LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown
  name: OnCooldown
  nameWithType: AbilityChannel.OnCooldown
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.OnCooldown
- uid: LobsterFramework.AbilitySystem.AbilityChannel.Cooldown*
  commentId: Overload:LobsterFramework.AbilitySystem.AbilityChannel.Cooldown
  href: LobsterFramework.AbilitySystem.AbilityChannel.html#LobsterFramework.AbilitySystem.AbilityChannel.Cooldown
  name: Cooldown
  nameWithType: AbilityChannel.Cooldown
  fullName: LobsterFramework.AbilitySystem.AbilityChannel.Cooldown
