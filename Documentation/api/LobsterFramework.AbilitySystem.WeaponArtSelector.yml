### YamlMime:ManagedReference
items:
- uid: LobsterFramework.AbilitySystem.WeaponArtSelector
  commentId: T:LobsterFramework.AbilitySystem.WeaponArtSelector
  id: WeaponArtSelector
  parent: LobsterFramework.AbilitySystem
  children:
  - LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName
  - LobsterFramework.AbilitySystem.WeaponArtSelector.weaponType
  langs:
  - csharp
  - vb
  name: WeaponArtSelector
  nameWithType: WeaponArtSelector
  fullName: LobsterFramework.AbilitySystem.WeaponArtSelector
  type: Class
  source:
    remote:
      path: AbilitySystem/Weapon/WeaponArtSelector.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: WeaponArtSelector
    path: ../AbilitySystem/Weapon/WeaponArtSelector.cs
    startLine: 8
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: >-
      [Serializable]

      public class WeaponArtSelector : SerializableType<Ability>, ISerializationCallbackReceiver
    content.vb: >-
      <Serializable>

      Public Class WeaponArtSelector Inherits SerializableType(Of Ability) Implements ISerializationCallbackReceiver
  inheritance:
  - System.Object
  - LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}
  implements:
  - UnityEngine.ISerializationCallbackReceiver
  inheritedMembers:
  - LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.Type
  - LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnAfterDeserialize
  - LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnBeforeSerialize
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: LobsterFramework.AbilitySystem.WeaponArtSelector.weaponType
  commentId: F:LobsterFramework.AbilitySystem.WeaponArtSelector.weaponType
  id: weaponType
  parent: LobsterFramework.AbilitySystem.WeaponArtSelector
  langs:
  - csharp
  - vb
  name: weaponType
  nameWithType: WeaponArtSelector.weaponType
  fullName: LobsterFramework.AbilitySystem.WeaponArtSelector.weaponType
  type: Field
  source:
    remote:
      path: AbilitySystem/Weapon/WeaponArtSelector.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: weaponType
    path: ../AbilitySystem/Weapon/WeaponArtSelector.cs
    startLine: 11
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public WeaponType weaponType
    return:
      type: LobsterFramework.AbilitySystem.WeaponType
    content.vb: Public weaponType As WeaponType
- uid: LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName
  commentId: P:LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName
  id: ConfigName
  parent: LobsterFramework.AbilitySystem.WeaponArtSelector
  langs:
  - csharp
  - vb
  name: ConfigName
  nameWithType: WeaponArtSelector.ConfigName
  fullName: LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName
  type: Property
  source:
    remote:
      path: AbilitySystem/Weapon/WeaponArtSelector.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: ConfigName
    path: ../AbilitySystem/Weapon/WeaponArtSelector.cs
    startLine: 13
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.AbilitySystem
  syntax:
    content: public string ConfigName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConfigName As String
  overload: LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName*
references:
- uid: LobsterFramework.AbilitySystem
  commentId: N:LobsterFramework.AbilitySystem
  href: LobsterFramework.html
  name: LobsterFramework.AbilitySystem
  nameWithType: LobsterFramework.AbilitySystem
  fullName: LobsterFramework.AbilitySystem
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.AbilitySystem
    name: AbilitySystem
    href: LobsterFramework.AbilitySystem.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}
  commentId: T:LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}
  parent: LobsterFramework.Utility
  definition: LobsterFramework.Utility.SerializableType`1
  href: LobsterFramework.Utility.SerializableType-1.html
  name: SerializableType<Ability>
  nameWithType: SerializableType<Ability>
  fullName: LobsterFramework.Utility.SerializableType<LobsterFramework.AbilitySystem.Ability>
  nameWithType.vb: SerializableType(Of Ability)
  fullName.vb: LobsterFramework.Utility.SerializableType(Of LobsterFramework.AbilitySystem.Ability)
  name.vb: SerializableType(Of Ability)
  spec.csharp:
  - uid: LobsterFramework.Utility.SerializableType`1
    name: SerializableType
    href: LobsterFramework.Utility.SerializableType-1.html
  - name: <
  - uid: LobsterFramework.AbilitySystem.Ability
    name: Ability
    href: LobsterFramework.AbilitySystem.Ability.html
  - name: '>'
  spec.vb:
  - uid: LobsterFramework.Utility.SerializableType`1
    name: SerializableType
    href: LobsterFramework.Utility.SerializableType-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: LobsterFramework.AbilitySystem.Ability
    name: Ability
    href: LobsterFramework.AbilitySystem.Ability.html
  - name: )
- uid: UnityEngine.ISerializationCallbackReceiver
  commentId: T:UnityEngine.ISerializationCallbackReceiver
  parent: UnityEngine
  isExternal: true
  name: ISerializationCallbackReceiver
  nameWithType: ISerializationCallbackReceiver
  fullName: UnityEngine.ISerializationCallbackReceiver
- uid: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.Type
  commentId: P:LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.Type
  parent: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}
  definition: LobsterFramework.Utility.SerializableType`1.Type
  href: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.html#LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.Type
  name: Type
  nameWithType: SerializableType<Ability>.Type
  fullName: LobsterFramework.Utility.SerializableType<LobsterFramework.AbilitySystem.Ability>.Type
  nameWithType.vb: SerializableType(Of Ability).Type
  fullName.vb: LobsterFramework.Utility.SerializableType(Of LobsterFramework.AbilitySystem.Ability).Type
- uid: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnAfterDeserialize
  commentId: M:LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnAfterDeserialize
  parent: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}
  definition: LobsterFramework.Utility.SerializableType`1.OnAfterDeserialize
  href: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.html#LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnAfterDeserialize
  name: OnAfterDeserialize()
  nameWithType: SerializableType<Ability>.OnAfterDeserialize()
  fullName: LobsterFramework.Utility.SerializableType<LobsterFramework.AbilitySystem.Ability>.OnAfterDeserialize()
  nameWithType.vb: SerializableType(Of Ability).OnAfterDeserialize()
  fullName.vb: LobsterFramework.Utility.SerializableType(Of LobsterFramework.AbilitySystem.Ability).OnAfterDeserialize()
  spec.csharp:
  - uid: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnAfterDeserialize
    name: OnAfterDeserialize
    href: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.html#LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnAfterDeserialize
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnAfterDeserialize
    name: OnAfterDeserialize
    href: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.html#LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnAfterDeserialize
  - name: (
  - name: )
- uid: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnBeforeSerialize
  commentId: M:LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnBeforeSerialize
  parent: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}
  definition: LobsterFramework.Utility.SerializableType`1.OnBeforeSerialize
  href: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.html#LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnBeforeSerialize
  name: OnBeforeSerialize()
  nameWithType: SerializableType<Ability>.OnBeforeSerialize()
  fullName: LobsterFramework.Utility.SerializableType<LobsterFramework.AbilitySystem.Ability>.OnBeforeSerialize()
  nameWithType.vb: SerializableType(Of Ability).OnBeforeSerialize()
  fullName.vb: LobsterFramework.Utility.SerializableType(Of LobsterFramework.AbilitySystem.Ability).OnBeforeSerialize()
  spec.csharp:
  - uid: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnBeforeSerialize
    name: OnBeforeSerialize
    href: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.html#LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnBeforeSerialize
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnBeforeSerialize
    name: OnBeforeSerialize
    href: LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.html#LobsterFramework.Utility.SerializableType{LobsterFramework.AbilitySystem.Ability}.OnBeforeSerialize
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LobsterFramework.Utility.SerializableType`1
  commentId: T:LobsterFramework.Utility.SerializableType`1
  href: LobsterFramework.Utility.SerializableType-1.html
  name: SerializableType<T>
  nameWithType: SerializableType<T>
  fullName: LobsterFramework.Utility.SerializableType<T>
  nameWithType.vb: SerializableType(Of T)
  fullName.vb: LobsterFramework.Utility.SerializableType(Of T)
  name.vb: SerializableType(Of T)
  spec.csharp:
  - uid: LobsterFramework.Utility.SerializableType`1
    name: SerializableType
    href: LobsterFramework.Utility.SerializableType-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LobsterFramework.Utility.SerializableType`1
    name: SerializableType
    href: LobsterFramework.Utility.SerializableType-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LobsterFramework.Utility
  commentId: N:LobsterFramework.Utility
  href: LobsterFramework.html
  name: LobsterFramework.Utility
  nameWithType: LobsterFramework.Utility
  fullName: LobsterFramework.Utility
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: LobsterFramework.Utility.SerializableType`1.Type
  commentId: P:LobsterFramework.Utility.SerializableType`1.Type
  href: LobsterFramework.Utility.SerializableType-1.html#LobsterFramework.Utility.SerializableType`1.Type
  name: Type
  nameWithType: SerializableType<T>.Type
  fullName: LobsterFramework.Utility.SerializableType<T>.Type
  nameWithType.vb: SerializableType(Of T).Type
  fullName.vb: LobsterFramework.Utility.SerializableType(Of T).Type
- uid: LobsterFramework.Utility.SerializableType`1.OnAfterDeserialize
  commentId: M:LobsterFramework.Utility.SerializableType`1.OnAfterDeserialize
  href: LobsterFramework.Utility.SerializableType-1.html#LobsterFramework.Utility.SerializableType`1.OnAfterDeserialize
  name: OnAfterDeserialize()
  nameWithType: SerializableType<T>.OnAfterDeserialize()
  fullName: LobsterFramework.Utility.SerializableType<T>.OnAfterDeserialize()
  nameWithType.vb: SerializableType(Of T).OnAfterDeserialize()
  fullName.vb: LobsterFramework.Utility.SerializableType(Of T).OnAfterDeserialize()
  spec.csharp:
  - uid: LobsterFramework.Utility.SerializableType`1.OnAfterDeserialize
    name: OnAfterDeserialize
    href: LobsterFramework.Utility.SerializableType-1.html#LobsterFramework.Utility.SerializableType`1.OnAfterDeserialize
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.SerializableType`1.OnAfterDeserialize
    name: OnAfterDeserialize
    href: LobsterFramework.Utility.SerializableType-1.html#LobsterFramework.Utility.SerializableType`1.OnAfterDeserialize
  - name: (
  - name: )
- uid: LobsterFramework.Utility.SerializableType`1.OnBeforeSerialize
  commentId: M:LobsterFramework.Utility.SerializableType`1.OnBeforeSerialize
  href: LobsterFramework.Utility.SerializableType-1.html#LobsterFramework.Utility.SerializableType`1.OnBeforeSerialize
  name: OnBeforeSerialize()
  nameWithType: SerializableType<T>.OnBeforeSerialize()
  fullName: LobsterFramework.Utility.SerializableType<T>.OnBeforeSerialize()
  nameWithType.vb: SerializableType(Of T).OnBeforeSerialize()
  fullName.vb: LobsterFramework.Utility.SerializableType(Of T).OnBeforeSerialize()
  spec.csharp:
  - uid: LobsterFramework.Utility.SerializableType`1.OnBeforeSerialize
    name: OnBeforeSerialize
    href: LobsterFramework.Utility.SerializableType-1.html#LobsterFramework.Utility.SerializableType`1.OnBeforeSerialize
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.SerializableType`1.OnBeforeSerialize
    name: OnBeforeSerialize
    href: LobsterFramework.Utility.SerializableType-1.html#LobsterFramework.Utility.SerializableType`1.OnBeforeSerialize
  - name: (
  - name: )
- uid: LobsterFramework.AbilitySystem.WeaponType
  commentId: T:LobsterFramework.AbilitySystem.WeaponType
  parent: LobsterFramework.AbilitySystem
  href: LobsterFramework.AbilitySystem.WeaponType.html
  name: WeaponType
  nameWithType: WeaponType
  fullName: LobsterFramework.AbilitySystem.WeaponType
- uid: LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName*
  commentId: Overload:LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName
  href: LobsterFramework.AbilitySystem.WeaponArtSelector.html#LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName
  name: ConfigName
  nameWithType: WeaponArtSelector.ConfigName
  fullName: LobsterFramework.AbilitySystem.WeaponArtSelector.ConfigName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
