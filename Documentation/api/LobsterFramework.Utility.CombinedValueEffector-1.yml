### YamlMime:ManagedReference
items:
- uid: LobsterFramework.Utility.CombinedValueEffector`1
  commentId: T:LobsterFramework.Utility.CombinedValueEffector`1
  id: CombinedValueEffector`1
  parent: LobsterFramework.Utility
  children:
  - LobsterFramework.Utility.CombinedValueEffector`1.Apply(`0)
  - LobsterFramework.Utility.CombinedValueEffector`1.Finalize
  - LobsterFramework.Utility.CombinedValueEffector`1.Release
  - LobsterFramework.Utility.CombinedValueEffector`1.SetValue(`0)
  langs:
  - csharp
  - vb
  name: CombinedValueEffector<T>
  nameWithType: CombinedValueEffector<T>
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>
  type: Class
  source:
    remote:
      path: Utility/CombinedValue.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: CombinedValueEffector
    path: ../Utility/CombinedValue.cs
    startLine: 116
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: 'public class CombinedValueEffector<T> where T : IEquatable<T>'
    typeParameters:
    - id: T
    content.vb: Public Class CombinedValueEffector(Of T As IEquatable(Of T))
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CombinedValueEffector(Of T)
  fullName.vb: LobsterFramework.Utility.CombinedValueEffector(Of T)
  name.vb: CombinedValueEffector(Of T)
- uid: LobsterFramework.Utility.CombinedValueEffector`1.Finalize
  commentId: M:LobsterFramework.Utility.CombinedValueEffector`1.Finalize
  id: Finalize
  parent: LobsterFramework.Utility.CombinedValueEffector`1
  langs:
  - csharp
  - vb
  name: ~CombinedValueEffector()
  nameWithType: CombinedValueEffector<T>.~CombinedValueEffector()
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>.~CombinedValueEffector()
  type: Method
  source:
    remote:
      path: Utility/CombinedValue.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Finalize
    path: ../Utility/CombinedValue.cs
    startLine: 126
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: protected ~CombinedValueEffector()
    content.vb: 'Protected '
  overload: LobsterFramework.Utility.CombinedValueEffector`1.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: LobsterFramework.Utility.CombinedValueEffector`1.Apply(`0)
  commentId: M:LobsterFramework.Utility.CombinedValueEffector`1.Apply(`0)
  id: Apply(`0)
  parent: LobsterFramework.Utility.CombinedValueEffector`1
  langs:
  - csharp
  - vb
  name: Apply(T)
  nameWithType: CombinedValueEffector<T>.Apply(T)
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>.Apply(T)
  type: Method
  source:
    remote:
      path: Utility/CombinedValue.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Apply
    path: ../Utility/CombinedValue.cs
    startLine: 136
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Set a effector to the specified value and apply it
  example: []
  syntax:
    content: public void Apply(T value)
    parameters:
    - id: value
      type: '{T}'
      description: The value of the effector to be added
    content.vb: Public Sub Apply(value As T)
  overload: LobsterFramework.Utility.CombinedValueEffector`1.Apply*
  nameWithType.vb: CombinedValueEffector(Of T).Apply(T)
  fullName.vb: LobsterFramework.Utility.CombinedValueEffector(Of T).Apply(T)
- uid: LobsterFramework.Utility.CombinedValueEffector`1.Release
  commentId: M:LobsterFramework.Utility.CombinedValueEffector`1.Release
  id: Release
  parent: LobsterFramework.Utility.CombinedValueEffector`1
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: CombinedValueEffector<T>.Release()
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>.Release()
  type: Method
  source:
    remote:
      path: Utility/CombinedValue.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Release
    path: ../Utility/CombinedValue.cs
    startLine: 149
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Remove the effector from CombinedValue
  example: []
  syntax:
    content: public void Release()
    content.vb: Public Sub Release()
  overload: LobsterFramework.Utility.CombinedValueEffector`1.Release*
  nameWithType.vb: CombinedValueEffector(Of T).Release()
  fullName.vb: LobsterFramework.Utility.CombinedValueEffector(Of T).Release()
- uid: LobsterFramework.Utility.CombinedValueEffector`1.SetValue(`0)
  commentId: M:LobsterFramework.Utility.CombinedValueEffector`1.SetValue(`0)
  id: SetValue(`0)
  parent: LobsterFramework.Utility.CombinedValueEffector`1
  langs:
  - csharp
  - vb
  name: SetValue(T)
  nameWithType: CombinedValueEffector<T>.SetValue(T)
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>.SetValue(T)
  type: Method
  source:
    remote:
      path: Utility/CombinedValue.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: SetValue
    path: ../Utility/CombinedValue.cs
    startLine: 162
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Change the value of the effector added, effector value must be compatible. If the effector is not applied then nothing will happen
  example: []
  syntax:
    content: public bool SetValue(T value)
    parameters:
    - id: value
      type: '{T}'
      description: The value to change to
    return:
      type: System.Boolean
      description: true if the effector value has been changed, otherwise false
    content.vb: Public Function SetValue(value As T) As Boolean
  overload: LobsterFramework.Utility.CombinedValueEffector`1.SetValue*
  nameWithType.vb: CombinedValueEffector(Of T).SetValue(T)
  fullName.vb: LobsterFramework.Utility.CombinedValueEffector(Of T).SetValue(T)
references:
- uid: LobsterFramework.Utility
  commentId: N:LobsterFramework.Utility
  href: LobsterFramework.html
  name: LobsterFramework.Utility
  nameWithType: LobsterFramework.Utility
  fullName: LobsterFramework.Utility
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LobsterFramework.Utility.CombinedValueEffector`1.Finalize*
  commentId: Overload:LobsterFramework.Utility.CombinedValueEffector`1.Finalize
  href: LobsterFramework.Utility.CombinedValueEffector-1.html#LobsterFramework.Utility.CombinedValueEffector`1.Finalize
  name: ~CombinedValueEffector
  nameWithType: CombinedValueEffector<T>.~CombinedValueEffector
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>.~CombinedValueEffector
  spec.csharp:
  - name: "~"
  - uid: LobsterFramework.Utility.CombinedValueEffector`1.Finalize*
    name: CombinedValueEffector
    href: LobsterFramework.Utility.CombinedValueEffector-1.html#LobsterFramework.Utility.CombinedValueEffector`1.Finalize
- uid: LobsterFramework.Utility.CombinedValueEffector`1.Apply*
  commentId: Overload:LobsterFramework.Utility.CombinedValueEffector`1.Apply
  href: LobsterFramework.Utility.CombinedValueEffector-1.html#LobsterFramework.Utility.CombinedValueEffector`1.Apply(`0)
  name: Apply
  nameWithType: CombinedValueEffector<T>.Apply
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>.Apply
  nameWithType.vb: CombinedValueEffector(Of T).Apply
  fullName.vb: LobsterFramework.Utility.CombinedValueEffector(Of T).Apply
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: LobsterFramework.Utility.CombinedValueEffector`1.Release*
  commentId: Overload:LobsterFramework.Utility.CombinedValueEffector`1.Release
  href: LobsterFramework.Utility.CombinedValueEffector-1.html#LobsterFramework.Utility.CombinedValueEffector`1.Release
  name: Release
  nameWithType: CombinedValueEffector<T>.Release
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>.Release
  nameWithType.vb: CombinedValueEffector(Of T).Release
  fullName.vb: LobsterFramework.Utility.CombinedValueEffector(Of T).Release
- uid: LobsterFramework.Utility.CombinedValueEffector`1.SetValue*
  commentId: Overload:LobsterFramework.Utility.CombinedValueEffector`1.SetValue
  href: LobsterFramework.Utility.CombinedValueEffector-1.html#LobsterFramework.Utility.CombinedValueEffector`1.SetValue(`0)
  name: SetValue
  nameWithType: CombinedValueEffector<T>.SetValue
  fullName: LobsterFramework.Utility.CombinedValueEffector<T>.SetValue
  nameWithType.vb: CombinedValueEffector(Of T).SetValue
  fullName.vb: LobsterFramework.Utility.CombinedValueEffector(Of T).SetValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
