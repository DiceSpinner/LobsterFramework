### YamlMime:ManagedReference
items:
- uid: LobsterFramework.Utility.CoroutineOption
  commentId: T:LobsterFramework.Utility.CoroutineOption
  id: CoroutineOption
  parent: LobsterFramework.Utility
  children:
  - LobsterFramework.Utility.CoroutineOption.Continue
  - LobsterFramework.Utility.CoroutineOption.Equals(LobsterFramework.Utility.CoroutineOption)
  - LobsterFramework.Utility.CoroutineOption.Reset
  - LobsterFramework.Utility.CoroutineOption.WaitForCondition(System.Func{System.Boolean})
  - LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(LobsterFramework.Utility.Coroutine)
  - LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption})
  - LobsterFramework.Utility.CoroutineOption.WaitForSeconds(System.Single)
  - LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds(System.Single)
  - LobsterFramework.Utility.CoroutineOption.predicateCondition
  - LobsterFramework.Utility.CoroutineOption.reset
  - LobsterFramework.Utility.CoroutineOption.unscaled
  - LobsterFramework.Utility.CoroutineOption.wait
  - LobsterFramework.Utility.CoroutineOption.waitFor
  - LobsterFramework.Utility.CoroutineOption.waitTime
  langs:
  - csharp
  - vb
  name: CoroutineOption
  nameWithType: CoroutineOption
  fullName: LobsterFramework.Utility.CoroutineOption
  type: Struct
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: CoroutineOption
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 8
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Represents options available for Coroutines, use predefined values or utility methods to create the option needed
  example: []
  syntax:
    content: 'public struct CoroutineOption : IEquatable<CoroutineOption>'
    content.vb: Public Structure CoroutineOption Implements IEquatable(Of CoroutineOption)
  implements:
  - System.IEquatable{LobsterFramework.Utility.CoroutineOption}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: LobsterFramework.Utility.CoroutineOption.reset
  commentId: F:LobsterFramework.Utility.CoroutineOption.reset
  id: reset
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: reset
  nameWithType: CoroutineOption.reset
  fullName: LobsterFramework.Utility.CoroutineOption.reset
  type: Field
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: reset
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 10
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: public bool reset
    return:
      type: System.Boolean
    content.vb: Public reset As Boolean
- uid: LobsterFramework.Utility.CoroutineOption.waitTime
  commentId: F:LobsterFramework.Utility.CoroutineOption.waitTime
  id: waitTime
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: waitTime
  nameWithType: CoroutineOption.waitTime
  fullName: LobsterFramework.Utility.CoroutineOption.waitTime
  type: Field
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: waitTime
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 11
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: public float waitTime
    return:
      type: System.Single
    content.vb: Public waitTime As Single
- uid: LobsterFramework.Utility.CoroutineOption.unscaled
  commentId: F:LobsterFramework.Utility.CoroutineOption.unscaled
  id: unscaled
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: unscaled
  nameWithType: CoroutineOption.unscaled
  fullName: LobsterFramework.Utility.CoroutineOption.unscaled
  type: Field
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: unscaled
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 12
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: public bool unscaled
    return:
      type: System.Boolean
    content.vb: Public unscaled As Boolean
- uid: LobsterFramework.Utility.CoroutineOption.waitFor
  commentId: F:LobsterFramework.Utility.CoroutineOption.waitFor
  id: waitFor
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: waitFor
  nameWithType: CoroutineOption.waitFor
  fullName: LobsterFramework.Utility.CoroutineOption.waitFor
  type: Field
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: waitFor
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 13
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: public IEnumerable<CoroutineOption> waitFor
    return:
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption}
    content.vb: Public waitFor As IEnumerable(Of CoroutineOption)
- uid: LobsterFramework.Utility.CoroutineOption.predicateCondition
  commentId: F:LobsterFramework.Utility.CoroutineOption.predicateCondition
  id: predicateCondition
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: predicateCondition
  nameWithType: CoroutineOption.predicateCondition
  fullName: LobsterFramework.Utility.CoroutineOption.predicateCondition
  type: Field
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: predicateCondition
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 14
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: public Func<bool> predicateCondition
    return:
      type: System.Func{System.Boolean}
    content.vb: Public predicateCondition As Func(Of Boolean)
- uid: LobsterFramework.Utility.CoroutineOption.wait
  commentId: F:LobsterFramework.Utility.CoroutineOption.wait
  id: wait
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: wait
  nameWithType: CoroutineOption.wait
  fullName: LobsterFramework.Utility.CoroutineOption.wait
  type: Field
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: wait
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 15
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: public Coroutine wait
    return:
      type: LobsterFramework.Utility.Coroutine
    content.vb: Public wait As Coroutine
- uid: LobsterFramework.Utility.CoroutineOption.Reset
  commentId: F:LobsterFramework.Utility.CoroutineOption.Reset
  id: Reset
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: Reset
  nameWithType: CoroutineOption.Reset
  fullName: LobsterFramework.Utility.CoroutineOption.Reset
  type: Field
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Reset
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 20
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: The coroutine option to restart the coroutine from the beginning
  example: []
  syntax:
    content: public static readonly CoroutineOption Reset
    return:
      type: LobsterFramework.Utility.CoroutineOption
    content.vb: Public Shared ReadOnly Reset As CoroutineOption
- uid: LobsterFramework.Utility.CoroutineOption.Continue
  commentId: F:LobsterFramework.Utility.CoroutineOption.Continue
  id: Continue
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: Continue
  nameWithType: CoroutineOption.Continue
  fullName: LobsterFramework.Utility.CoroutineOption.Continue
  type: Field
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Continue
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 24
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: The coroutine option to continue execution of the current coroutine
  example: []
  syntax:
    content: public static readonly CoroutineOption Continue
    return:
      type: LobsterFramework.Utility.CoroutineOption
    content.vb: Public Shared ReadOnly [Continue] As CoroutineOption
- uid: LobsterFramework.Utility.CoroutineOption.WaitForSeconds(System.Single)
  commentId: M:LobsterFramework.Utility.CoroutineOption.WaitForSeconds(System.Single)
  id: WaitForSeconds(System.Single)
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: WaitForSeconds(float)
  nameWithType: CoroutineOption.WaitForSeconds(float)
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForSeconds(float)
  type: Method
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: WaitForSeconds
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 31
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Halt the execution of coroutine for the specified seconds, will be affected by Time.timeScale
  example: []
  syntax:
    content: public static CoroutineOption WaitForSeconds(float time)
    parameters:
    - id: time
      type: System.Single
      description: time to halt the coroutine
    return:
      type: LobsterFramework.Utility.CoroutineOption
      description: The CoroutineOption represents this option
    content.vb: Public Shared Function WaitForSeconds(time As Single) As CoroutineOption
  overload: LobsterFramework.Utility.CoroutineOption.WaitForSeconds*
  nameWithType.vb: CoroutineOption.WaitForSeconds(Single)
  fullName.vb: LobsterFramework.Utility.CoroutineOption.WaitForSeconds(Single)
  name.vb: WaitForSeconds(Single)
- uid: LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds(System.Single)
  commentId: M:LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds(System.Single)
  id: WaitForUnscaledSeconds(System.Single)
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: WaitForUnscaledSeconds(float)
  nameWithType: CoroutineOption.WaitForUnscaledSeconds(float)
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds(float)
  type: Method
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: WaitForUnscaledSeconds
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 41
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Halt the execution of coroutine for the specified seconds, will not be affected by Time.timeScale
  example: []
  syntax:
    content: public static CoroutineOption WaitForUnscaledSeconds(float time)
    parameters:
    - id: time
      type: System.Single
      description: time to halt the coroutine
    return:
      type: LobsterFramework.Utility.CoroutineOption
      description: The CoroutineOption represents this option
    content.vb: Public Shared Function WaitForUnscaledSeconds(time As Single) As CoroutineOption
  overload: LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds*
  nameWithType.vb: CoroutineOption.WaitForUnscaledSeconds(Single)
  fullName.vb: LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds(Single)
  name.vb: WaitForUnscaledSeconds(Single)
- uid: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption})
  commentId: M:LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption})
  id: WaitForCoroutine(System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption})
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: WaitForCoroutine(IEnumerable<CoroutineOption>)
  nameWithType: CoroutineOption.WaitForCoroutine(IEnumerable<CoroutineOption>)
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(System.Collections.Generic.IEnumerable<LobsterFramework.Utility.CoroutineOption>)
  type: Method
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: WaitForCoroutine
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 50
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Start a subcoroutine, current coroutine will not be executed until subcoroutine has finished
  example: []
  syntax:
    content: public static CoroutineOption WaitForCoroutine(IEnumerable<CoroutineOption> coroutine)
    parameters:
    - id: coroutine
      type: System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption}
      description: The subcoroutine to be executed
    return:
      type: LobsterFramework.Utility.CoroutineOption
      description: The CoroutineOption represents this option
    content.vb: Public Shared Function WaitForCoroutine(coroutine As IEnumerable(Of CoroutineOption)) As CoroutineOption
  overload: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine*
  nameWithType.vb: CoroutineOption.WaitForCoroutine(IEnumerable(Of CoroutineOption))
  fullName.vb: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(System.Collections.Generic.IEnumerable(Of LobsterFramework.Utility.CoroutineOption))
  name.vb: WaitForCoroutine(IEnumerable(Of CoroutineOption))
- uid: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(LobsterFramework.Utility.Coroutine)
  commentId: M:LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(LobsterFramework.Utility.Coroutine)
  id: WaitForCoroutine(LobsterFramework.Utility.Coroutine)
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: WaitForCoroutine(Coroutine)
  nameWithType: CoroutineOption.WaitForCoroutine(Coroutine)
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(LobsterFramework.Utility.Coroutine)
  type: Method
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: WaitForCoroutine
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 60
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Halt the execution of coroutine until another coroutine has finished, cannot be used to wait for the current coroutine itself
  example: []
  syntax:
    content: public static CoroutineOption WaitForCoroutine(Coroutine coroutine)
    parameters:
    - id: coroutine
      type: LobsterFramework.Utility.Coroutine
      description: The coroutine to wait for, cannot be the current coroutine itself
    return:
      type: LobsterFramework.Utility.CoroutineOption
      description: The CoroutineOption represents this option
    content.vb: Public Shared Function WaitForCoroutine(coroutine As Coroutine) As CoroutineOption
  overload: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine*
- uid: LobsterFramework.Utility.CoroutineOption.WaitForCondition(System.Func{System.Boolean})
  commentId: M:LobsterFramework.Utility.CoroutineOption.WaitForCondition(System.Func{System.Boolean})
  id: WaitForCondition(System.Func{System.Boolean})
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: WaitForCondition(Func<bool>)
  nameWithType: CoroutineOption.WaitForCondition(Func<bool>)
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForCondition(System.Func<bool>)
  type: Method
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: WaitForCondition
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 71
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Halt the execution of coroutine until the condition has been met
  example: []
  syntax:
    content: public static CoroutineOption WaitForCondition(Func<bool> predicate)
    parameters:
    - id: predicate
      type: System.Func{System.Boolean}
      description: The condition to test for
    return:
      type: LobsterFramework.Utility.CoroutineOption
      description: The CoroutineOption represents this option
    content.vb: Public Shared Function WaitForCondition(predicate As Func(Of Boolean)) As CoroutineOption
  overload: LobsterFramework.Utility.CoroutineOption.WaitForCondition*
  nameWithType.vb: CoroutineOption.WaitForCondition(Func(Of Boolean))
  fullName.vb: LobsterFramework.Utility.CoroutineOption.WaitForCondition(System.Func(Of Boolean))
  name.vb: WaitForCondition(Func(Of Boolean))
- uid: LobsterFramework.Utility.CoroutineOption.Equals(LobsterFramework.Utility.CoroutineOption)
  commentId: M:LobsterFramework.Utility.CoroutineOption.Equals(LobsterFramework.Utility.CoroutineOption)
  id: Equals(LobsterFramework.Utility.CoroutineOption)
  parent: LobsterFramework.Utility.CoroutineOption
  langs:
  - csharp
  - vb
  name: Equals(CoroutineOption)
  nameWithType: CoroutineOption.Equals(CoroutineOption)
  fullName: LobsterFramework.Utility.CoroutineOption.Equals(LobsterFramework.Utility.CoroutineOption)
  type: Method
  source:
    remote:
      path: Utility/Coroutine/CoroutineOption.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: Equals
    path: ../Utility/Coroutine/CoroutineOption.cs
    startLine: 77
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  example: []
  syntax:
    content: public bool Equals(CoroutineOption other)
    parameters:
    - id: other
      type: LobsterFramework.Utility.CoroutineOption
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As CoroutineOption) As Boolean
  overload: LobsterFramework.Utility.CoroutineOption.Equals*
  implements:
  - System.IEquatable{LobsterFramework.Utility.CoroutineOption}.Equals(LobsterFramework.Utility.CoroutineOption)
references:
- uid: LobsterFramework.Utility
  commentId: N:LobsterFramework.Utility
  href: LobsterFramework.html
  name: LobsterFramework.Utility
  nameWithType: LobsterFramework.Utility
  fullName: LobsterFramework.Utility
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
- uid: System.IEquatable{LobsterFramework.Utility.CoroutineOption}
  commentId: T:System.IEquatable{LobsterFramework.Utility.CoroutineOption}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<CoroutineOption>
  nameWithType: IEquatable<CoroutineOption>
  fullName: System.IEquatable<LobsterFramework.Utility.CoroutineOption>
  nameWithType.vb: IEquatable(Of CoroutineOption)
  fullName.vb: System.IEquatable(Of LobsterFramework.Utility.CoroutineOption)
  name.vb: IEquatable(Of CoroutineOption)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: LobsterFramework.Utility.CoroutineOption
    name: CoroutineOption
    href: LobsterFramework.Utility.CoroutineOption.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LobsterFramework.Utility.CoroutineOption
    name: CoroutineOption
    href: LobsterFramework.Utility.CoroutineOption.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption}
  commentId: T:System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<CoroutineOption>
  nameWithType: IEnumerable<CoroutineOption>
  fullName: System.Collections.Generic.IEnumerable<LobsterFramework.Utility.CoroutineOption>
  nameWithType.vb: IEnumerable(Of CoroutineOption)
  fullName.vb: System.Collections.Generic.IEnumerable(Of LobsterFramework.Utility.CoroutineOption)
  name.vb: IEnumerable(Of CoroutineOption)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: LobsterFramework.Utility.CoroutineOption
    name: CoroutineOption
    href: LobsterFramework.Utility.CoroutineOption.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: LobsterFramework.Utility.CoroutineOption
    name: CoroutineOption
    href: LobsterFramework.Utility.CoroutineOption.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool>
  nameWithType: Func<bool>
  fullName: System.Func<bool>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: LobsterFramework.Utility.Coroutine
  commentId: T:LobsterFramework.Utility.Coroutine
  parent: LobsterFramework.Utility
  href: LobsterFramework.Utility.Coroutine.html
  name: Coroutine
  nameWithType: Coroutine
  fullName: LobsterFramework.Utility.Coroutine
- uid: LobsterFramework.Utility.CoroutineOption
  commentId: T:LobsterFramework.Utility.CoroutineOption
  parent: LobsterFramework.Utility
  href: LobsterFramework.Utility.CoroutineOption.html
  name: CoroutineOption
  nameWithType: CoroutineOption
  fullName: LobsterFramework.Utility.CoroutineOption
- uid: LobsterFramework.Utility.CoroutineOption.WaitForSeconds*
  commentId: Overload:LobsterFramework.Utility.CoroutineOption.WaitForSeconds
  href: LobsterFramework.Utility.CoroutineOption.html#LobsterFramework.Utility.CoroutineOption.WaitForSeconds(System.Single)
  name: WaitForSeconds
  nameWithType: CoroutineOption.WaitForSeconds
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForSeconds
- uid: LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds*
  commentId: Overload:LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds
  href: LobsterFramework.Utility.CoroutineOption.html#LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds(System.Single)
  name: WaitForUnscaledSeconds
  nameWithType: CoroutineOption.WaitForUnscaledSeconds
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForUnscaledSeconds
- uid: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine*
  commentId: Overload:LobsterFramework.Utility.CoroutineOption.WaitForCoroutine
  href: LobsterFramework.Utility.CoroutineOption.html#LobsterFramework.Utility.CoroutineOption.WaitForCoroutine(System.Collections.Generic.IEnumerable{LobsterFramework.Utility.CoroutineOption})
  name: WaitForCoroutine
  nameWithType: CoroutineOption.WaitForCoroutine
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForCoroutine
- uid: LobsterFramework.Utility.CoroutineOption.WaitForCondition*
  commentId: Overload:LobsterFramework.Utility.CoroutineOption.WaitForCondition
  href: LobsterFramework.Utility.CoroutineOption.html#LobsterFramework.Utility.CoroutineOption.WaitForCondition(System.Func{System.Boolean})
  name: WaitForCondition
  nameWithType: CoroutineOption.WaitForCondition
  fullName: LobsterFramework.Utility.CoroutineOption.WaitForCondition
- uid: LobsterFramework.Utility.CoroutineOption.Equals*
  commentId: Overload:LobsterFramework.Utility.CoroutineOption.Equals
  href: LobsterFramework.Utility.CoroutineOption.html#LobsterFramework.Utility.CoroutineOption.Equals(LobsterFramework.Utility.CoroutineOption)
  name: Equals
  nameWithType: CoroutineOption.Equals
  fullName: LobsterFramework.Utility.CoroutineOption.Equals
- uid: System.IEquatable{LobsterFramework.Utility.CoroutineOption}.Equals(LobsterFramework.Utility.CoroutineOption)
  commentId: M:System.IEquatable{LobsterFramework.Utility.CoroutineOption}.Equals(LobsterFramework.Utility.CoroutineOption)
  parent: System.IEquatable{LobsterFramework.Utility.CoroutineOption}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-lobsterframework.utility.coroutineoption-.equals#system-iequatable((lobsterframework-utility-coroutineoption))-equals(lobsterframework-utility-coroutineoption)
  name: Equals(CoroutineOption)
  nameWithType: IEquatable<CoroutineOption>.Equals(CoroutineOption)
  fullName: System.IEquatable<LobsterFramework.Utility.CoroutineOption>.Equals(LobsterFramework.Utility.CoroutineOption)
  nameWithType.vb: IEquatable(Of CoroutineOption).Equals(CoroutineOption)
  fullName.vb: System.IEquatable(Of LobsterFramework.Utility.CoroutineOption).Equals(LobsterFramework.Utility.CoroutineOption)
  spec.csharp:
  - uid: System.IEquatable{LobsterFramework.Utility.CoroutineOption}.Equals(LobsterFramework.Utility.CoroutineOption)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-lobsterframework.utility.coroutineoption-.equals#system-iequatable((lobsterframework-utility-coroutineoption))-equals(lobsterframework-utility-coroutineoption)
  - name: (
  - uid: LobsterFramework.Utility.CoroutineOption
    name: CoroutineOption
    href: LobsterFramework.Utility.CoroutineOption.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{LobsterFramework.Utility.CoroutineOption}.Equals(LobsterFramework.Utility.CoroutineOption)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-lobsterframework.utility.coroutineoption-.equals#system-iequatable((lobsterframework-utility-coroutineoption))-equals(lobsterframework-utility-coroutineoption)
  - name: (
  - uid: LobsterFramework.Utility.CoroutineOption
    name: CoroutineOption
    href: LobsterFramework.Utility.CoroutineOption.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
