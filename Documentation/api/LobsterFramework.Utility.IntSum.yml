### YamlMime:ManagedReference
items:
- uid: LobsterFramework.Utility.IntSum
  commentId: T:LobsterFramework.Utility.IntSum
  id: IntSum
  parent: LobsterFramework.Utility
  children:
  - LobsterFramework.Utility.IntSum.#ctor(System.Int32)
  - LobsterFramework.Utility.IntSum.ComputeValue
  langs:
  - csharp
  - vb
  name: IntSum
  nameWithType: IntSum
  fullName: LobsterFramework.Utility.IntSum
  type: Class
  source:
    remote:
      path: Utility/CombinedValue.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: IntSum
    path: ../Utility/CombinedValue.cs
    startLine: 171
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Value is the sum of all effectors
  example: []
  syntax:
    content: 'public class IntSum : CombinedValue<int>'
    content.vb: Public Class IntSum Inherits CombinedValue(Of Integer)
  inheritance:
  - System.Object
  - LobsterFramework.Utility.CombinedValue{System.Int32}
  inheritedMembers:
  - LobsterFramework.Utility.CombinedValue{System.Int32}.stats
  - LobsterFramework.Utility.CombinedValue{System.Int32}.baseValue
  - LobsterFramework.Utility.CombinedValue{System.Int32}.Value
  - LobsterFramework.Utility.CombinedValue{System.Int32}.Compatible(System.Int32)
  - LobsterFramework.Utility.CombinedValue{System.Int32}.ClearEffectors
  - LobsterFramework.Utility.CombinedValue{System.Int32}.MakeEffector
  - LobsterFramework.Utility.CombinedValue{System.Int32}.EffectorCount
- uid: LobsterFramework.Utility.IntSum.#ctor(System.Int32)
  commentId: M:LobsterFramework.Utility.IntSum.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: LobsterFramework.Utility.IntSum
  langs:
  - csharp
  - vb
  name: IntSum(int)
  nameWithType: IntSum.IntSum(int)
  fullName: LobsterFramework.Utility.IntSum.IntSum(int)
  type: Constructor
  source:
    remote:
      path: Utility/CombinedValue.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: .ctor
    path: ../Utility/CombinedValue.cs
    startLine: 173
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  syntax:
    content: public IntSum(int value)
    parameters:
    - id: value
      type: System.Int32
    content.vb: Public Sub New(value As Integer)
  overload: LobsterFramework.Utility.IntSum.#ctor*
  nameWithType.vb: IntSum.New(Integer)
  fullName.vb: LobsterFramework.Utility.IntSum.New(Integer)
  name.vb: New(Integer)
- uid: LobsterFramework.Utility.IntSum.ComputeValue
  commentId: M:LobsterFramework.Utility.IntSum.ComputeValue
  id: ComputeValue
  parent: LobsterFramework.Utility.IntSum
  langs:
  - csharp
  - vb
  name: ComputeValue()
  nameWithType: IntSum.ComputeValue()
  fullName: LobsterFramework.Utility.IntSum.ComputeValue()
  type: Method
  source:
    remote:
      path: Utility/CombinedValue.cs
      branch: main
      repo: https://github.com/DiceSpinner/LobsterFramework.git
    id: ComputeValue
    path: ../Utility/CombinedValue.cs
    startLine: 177
  assemblies:
  - LobsterFramework
  namespace: LobsterFramework.Utility
  summary: Compute the value taking all effectors into account
  example: []
  syntax:
    content: protected override int ComputeValue()
    return:
      type: System.Int32
      description: ''
    content.vb: Protected Overrides Function ComputeValue() As Integer
  overridden: LobsterFramework.Utility.CombinedValue{System.Int32}.ComputeValue
  overload: LobsterFramework.Utility.IntSum.ComputeValue*
references:
- uid: LobsterFramework.Utility
  commentId: N:LobsterFramework.Utility
  href: LobsterFramework.html
  name: LobsterFramework.Utility
  nameWithType: LobsterFramework.Utility
  fullName: LobsterFramework.Utility
  spec.csharp:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
  spec.vb:
  - uid: LobsterFramework
    name: LobsterFramework
    href: LobsterFramework.html
  - name: .
  - uid: LobsterFramework.Utility
    name: Utility
    href: LobsterFramework.Utility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}
  commentId: T:LobsterFramework.Utility.CombinedValue{System.Int32}
  parent: LobsterFramework.Utility
  definition: LobsterFramework.Utility.CombinedValue`1
  href: LobsterFramework.Utility.CombinedValue-1.html
  name: CombinedValue<int>
  nameWithType: CombinedValue<int>
  fullName: LobsterFramework.Utility.CombinedValue<int>
  nameWithType.vb: CombinedValue(Of Integer)
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer)
  name.vb: CombinedValue(Of Integer)
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue`1
    name: CombinedValue
    href: LobsterFramework.Utility.CombinedValue-1.html
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue`1
    name: CombinedValue
    href: LobsterFramework.Utility.CombinedValue-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}.stats
  commentId: F:LobsterFramework.Utility.CombinedValue{System.Int32}.stats
  parent: LobsterFramework.Utility.CombinedValue{System.Int32}
  definition: LobsterFramework.Utility.CombinedValue`1.stats
  href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.stats
  name: stats
  nameWithType: CombinedValue<int>.stats
  fullName: LobsterFramework.Utility.CombinedValue<int>.stats
  nameWithType.vb: CombinedValue(Of Integer).stats
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer).stats
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}.baseValue
  commentId: F:LobsterFramework.Utility.CombinedValue{System.Int32}.baseValue
  parent: LobsterFramework.Utility.CombinedValue{System.Int32}
  definition: LobsterFramework.Utility.CombinedValue`1.baseValue
  href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.baseValue
  name: baseValue
  nameWithType: CombinedValue<int>.baseValue
  fullName: LobsterFramework.Utility.CombinedValue<int>.baseValue
  nameWithType.vb: CombinedValue(Of Integer).baseValue
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer).baseValue
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}.Value
  commentId: P:LobsterFramework.Utility.CombinedValue{System.Int32}.Value
  parent: LobsterFramework.Utility.CombinedValue{System.Int32}
  definition: LobsterFramework.Utility.CombinedValue`1.Value
  href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.Value
  name: Value
  nameWithType: CombinedValue<int>.Value
  fullName: LobsterFramework.Utility.CombinedValue<int>.Value
  nameWithType.vb: CombinedValue(Of Integer).Value
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer).Value
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}.Compatible(System.Int32)
  commentId: M:LobsterFramework.Utility.CombinedValue{System.Int32}.Compatible(System.Int32)
  parent: LobsterFramework.Utility.CombinedValue{System.Int32}
  definition: LobsterFramework.Utility.CombinedValue`1.Compatible(`0)
  href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.Compatible(System.Int32)
  name: Compatible(int)
  nameWithType: CombinedValue<int>.Compatible(int)
  fullName: LobsterFramework.Utility.CombinedValue<int>.Compatible(int)
  nameWithType.vb: CombinedValue(Of Integer).Compatible(Integer)
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer).Compatible(Integer)
  name.vb: Compatible(Integer)
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue{System.Int32}.Compatible(System.Int32)
    name: Compatible
    href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.Compatible(System.Int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue{System.Int32}.Compatible(System.Int32)
    name: Compatible
    href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.Compatible(System.Int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}.ClearEffectors
  commentId: M:LobsterFramework.Utility.CombinedValue{System.Int32}.ClearEffectors
  parent: LobsterFramework.Utility.CombinedValue{System.Int32}
  definition: LobsterFramework.Utility.CombinedValue`1.ClearEffectors
  href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.ClearEffectors
  name: ClearEffectors()
  nameWithType: CombinedValue<int>.ClearEffectors()
  fullName: LobsterFramework.Utility.CombinedValue<int>.ClearEffectors()
  nameWithType.vb: CombinedValue(Of Integer).ClearEffectors()
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer).ClearEffectors()
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue{System.Int32}.ClearEffectors
    name: ClearEffectors
    href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.ClearEffectors
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue{System.Int32}.ClearEffectors
    name: ClearEffectors
    href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.ClearEffectors
  - name: (
  - name: )
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}.MakeEffector
  commentId: M:LobsterFramework.Utility.CombinedValue{System.Int32}.MakeEffector
  parent: LobsterFramework.Utility.CombinedValue{System.Int32}
  definition: LobsterFramework.Utility.CombinedValue`1.MakeEffector
  href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.MakeEffector
  name: MakeEffector()
  nameWithType: CombinedValue<int>.MakeEffector()
  fullName: LobsterFramework.Utility.CombinedValue<int>.MakeEffector()
  nameWithType.vb: CombinedValue(Of Integer).MakeEffector()
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer).MakeEffector()
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue{System.Int32}.MakeEffector
    name: MakeEffector
    href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.MakeEffector
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue{System.Int32}.MakeEffector
    name: MakeEffector
    href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.MakeEffector
  - name: (
  - name: )
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}.EffectorCount
  commentId: P:LobsterFramework.Utility.CombinedValue{System.Int32}.EffectorCount
  parent: LobsterFramework.Utility.CombinedValue{System.Int32}
  definition: LobsterFramework.Utility.CombinedValue`1.EffectorCount
  href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.EffectorCount
  name: EffectorCount
  nameWithType: CombinedValue<int>.EffectorCount
  fullName: LobsterFramework.Utility.CombinedValue<int>.EffectorCount
  nameWithType.vb: CombinedValue(Of Integer).EffectorCount
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer).EffectorCount
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LobsterFramework.Utility.CombinedValue`1
  commentId: T:LobsterFramework.Utility.CombinedValue`1
  parent: LobsterFramework.Utility
  href: LobsterFramework.Utility.CombinedValue-1.html
  name: CombinedValue<T>
  nameWithType: CombinedValue<T>
  fullName: LobsterFramework.Utility.CombinedValue<T>
  nameWithType.vb: CombinedValue(Of T)
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T)
  name.vb: CombinedValue(Of T)
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue`1
    name: CombinedValue
    href: LobsterFramework.Utility.CombinedValue-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue`1
    name: CombinedValue
    href: LobsterFramework.Utility.CombinedValue-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LobsterFramework.Utility.CombinedValue`1.stats
  commentId: F:LobsterFramework.Utility.CombinedValue`1.stats
  href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.stats
  name: stats
  nameWithType: CombinedValue<T>.stats
  fullName: LobsterFramework.Utility.CombinedValue<T>.stats
  nameWithType.vb: CombinedValue(Of T).stats
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T).stats
- uid: LobsterFramework.Utility.CombinedValue`1.baseValue
  commentId: F:LobsterFramework.Utility.CombinedValue`1.baseValue
  href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.baseValue
  name: baseValue
  nameWithType: CombinedValue<T>.baseValue
  fullName: LobsterFramework.Utility.CombinedValue<T>.baseValue
  nameWithType.vb: CombinedValue(Of T).baseValue
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T).baseValue
- uid: LobsterFramework.Utility.CombinedValue`1.Value
  commentId: P:LobsterFramework.Utility.CombinedValue`1.Value
  href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.Value
  name: Value
  nameWithType: CombinedValue<T>.Value
  fullName: LobsterFramework.Utility.CombinedValue<T>.Value
  nameWithType.vb: CombinedValue(Of T).Value
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T).Value
- uid: LobsterFramework.Utility.CombinedValue`1.Compatible(`0)
  commentId: M:LobsterFramework.Utility.CombinedValue`1.Compatible(`0)
  href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.Compatible(`0)
  name: Compatible(T)
  nameWithType: CombinedValue<T>.Compatible(T)
  fullName: LobsterFramework.Utility.CombinedValue<T>.Compatible(T)
  nameWithType.vb: CombinedValue(Of T).Compatible(T)
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T).Compatible(T)
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue`1.Compatible(`0)
    name: Compatible
    href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.Compatible(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue`1.Compatible(`0)
    name: Compatible
    href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.Compatible(`0)
  - name: (
  - name: T
  - name: )
- uid: LobsterFramework.Utility.CombinedValue`1.ClearEffectors
  commentId: M:LobsterFramework.Utility.CombinedValue`1.ClearEffectors
  href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.ClearEffectors
  name: ClearEffectors()
  nameWithType: CombinedValue<T>.ClearEffectors()
  fullName: LobsterFramework.Utility.CombinedValue<T>.ClearEffectors()
  nameWithType.vb: CombinedValue(Of T).ClearEffectors()
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T).ClearEffectors()
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue`1.ClearEffectors
    name: ClearEffectors
    href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.ClearEffectors
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue`1.ClearEffectors
    name: ClearEffectors
    href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.ClearEffectors
  - name: (
  - name: )
- uid: LobsterFramework.Utility.CombinedValue`1.MakeEffector
  commentId: M:LobsterFramework.Utility.CombinedValue`1.MakeEffector
  href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.MakeEffector
  name: MakeEffector()
  nameWithType: CombinedValue<T>.MakeEffector()
  fullName: LobsterFramework.Utility.CombinedValue<T>.MakeEffector()
  nameWithType.vb: CombinedValue(Of T).MakeEffector()
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T).MakeEffector()
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue`1.MakeEffector
    name: MakeEffector
    href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.MakeEffector
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue`1.MakeEffector
    name: MakeEffector
    href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.MakeEffector
  - name: (
  - name: )
- uid: LobsterFramework.Utility.CombinedValue`1.EffectorCount
  commentId: P:LobsterFramework.Utility.CombinedValue`1.EffectorCount
  href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.EffectorCount
  name: EffectorCount
  nameWithType: CombinedValue<T>.EffectorCount
  fullName: LobsterFramework.Utility.CombinedValue<T>.EffectorCount
  nameWithType.vb: CombinedValue(Of T).EffectorCount
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T).EffectorCount
- uid: LobsterFramework.Utility.IntSum.#ctor*
  commentId: Overload:LobsterFramework.Utility.IntSum.#ctor
  href: LobsterFramework.Utility.IntSum.html#LobsterFramework.Utility.IntSum.#ctor(System.Int32)
  name: IntSum
  nameWithType: IntSum.IntSum
  fullName: LobsterFramework.Utility.IntSum.IntSum
  nameWithType.vb: IntSum.New
  fullName.vb: LobsterFramework.Utility.IntSum.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LobsterFramework.Utility.CombinedValue{System.Int32}.ComputeValue
  commentId: M:LobsterFramework.Utility.CombinedValue{System.Int32}.ComputeValue
  parent: LobsterFramework.Utility.CombinedValue{System.Int32}
  definition: LobsterFramework.Utility.CombinedValue`1.ComputeValue
  href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.ComputeValue
  name: ComputeValue()
  nameWithType: CombinedValue<int>.ComputeValue()
  fullName: LobsterFramework.Utility.CombinedValue<int>.ComputeValue()
  nameWithType.vb: CombinedValue(Of Integer).ComputeValue()
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of Integer).ComputeValue()
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue{System.Int32}.ComputeValue
    name: ComputeValue
    href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.ComputeValue
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue{System.Int32}.ComputeValue
    name: ComputeValue
    href: LobsterFramework.Utility.CombinedValue{System.Int32}.html#LobsterFramework.Utility.CombinedValue{System.Int32}.ComputeValue
  - name: (
  - name: )
- uid: LobsterFramework.Utility.IntSum.ComputeValue*
  commentId: Overload:LobsterFramework.Utility.IntSum.ComputeValue
  href: LobsterFramework.Utility.IntSum.html#LobsterFramework.Utility.IntSum.ComputeValue
  name: ComputeValue
  nameWithType: IntSum.ComputeValue
  fullName: LobsterFramework.Utility.IntSum.ComputeValue
- uid: LobsterFramework.Utility.CombinedValue`1.ComputeValue
  commentId: M:LobsterFramework.Utility.CombinedValue`1.ComputeValue
  href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.ComputeValue
  name: ComputeValue()
  nameWithType: CombinedValue<T>.ComputeValue()
  fullName: LobsterFramework.Utility.CombinedValue<T>.ComputeValue()
  nameWithType.vb: CombinedValue(Of T).ComputeValue()
  fullName.vb: LobsterFramework.Utility.CombinedValue(Of T).ComputeValue()
  spec.csharp:
  - uid: LobsterFramework.Utility.CombinedValue`1.ComputeValue
    name: ComputeValue
    href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.ComputeValue
  - name: (
  - name: )
  spec.vb:
  - uid: LobsterFramework.Utility.CombinedValue`1.ComputeValue
    name: ComputeValue
    href: LobsterFramework.Utility.CombinedValue-1.html#LobsterFramework.Utility.CombinedValue`1.ComputeValue
  - name: (
  - name: )
